//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestProject1
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using eStore.POCOS;

    public class Settings
    {
        private const int _maxLevel = 6;
        private const string _host = "http://localhost:1888";
        public static int MaxLevel
        {
            get
            {
                return _maxLevel;
            }
        }
        public static string Host
        {
            get
            {
                return _host;
            }
        }
        private static List<string> _urls;
        public static List<string> urls
        {
            get
            {

                if (_urls == null)
                {
                    _urls = new List<string>();
                }
                return _urls;
            }
        }
    }
    public class eStoreUIAutoTest : WebTest
    {

        public eStoreUIAutoTest()
        {
            this.PreAuthenticate = true;
        }


        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            WebTestRequest hostrequest = new WebTestRequest(Settings.Host + "/default.aspx");
            yield return hostrequest;
            foreach (HtmlTag tag in this.LastResponse.HtmlDocument.GetFilteredHtmlTags("a"))
            {
                string subURL = tag.GetAttributeValueAsString("href");
                if (string.IsNullOrEmpty(subURL) == false && subURL.StartsWith("http:", true, null) == false)
                    if (subURL.StartsWith("/") && (subURL.EndsWith("aspx") || subURL.EndsWith("htm")))
                    {
                        subURL = Settings.Host + subURL;

                        if (!Settings.urls.Contains(subURL))
                        {
                            WebTestRequest loopRequest = new WebTestRequest(subURL);
                            Settings.urls.Add(subURL);
                            yield return loopRequest;
                            foreach (HtmlTag tag2 in this.LastResponse.HtmlDocument.GetFilteredHtmlTags("a"))
                            {
                                string subURL2 = tag2.GetAttributeValueAsString("href");
                                if (string.IsNullOrEmpty(subURL2) == false && subURL2.StartsWith("http:", true, null) == false)
                                    if (subURL2.StartsWith("/") && (subURL2.EndsWith("aspx") || subURL2.EndsWith("htm")))
                                    {
                                        subURL2 = Settings.Host + subURL2;

                                        if (!Settings.urls.Contains(subURL2))
                                        {
                                            WebTestRequest loopRequest2 = new WebTestRequest(subURL2);
                                            Settings.urls.Add(subURL2);
                                            yield return loopRequest2;

                                        }

                                    }

                            }
                        }

                    }

            }


        }
    }
    
}
