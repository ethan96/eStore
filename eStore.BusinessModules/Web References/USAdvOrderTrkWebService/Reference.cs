//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace eStore.BusinessModules.USAdvOrderTrkWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="USAdvOrdTrkSoap", Namespace="http://tempuri.org/")]
    public partial class USAdvOrdTrk : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOrdTrkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdTrkSpeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdTrkSpeed2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdTrkSpeedByMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerNoSAPInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerNoByPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerNoByInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerNoBySOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEXRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerSalesTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenderInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public USAdvOrdTrk() {
            this.Url = global::eStore.BusinessModules.Properties.Settings.Default.eStore_BusinessModules_USAdvOrderTrkWebService_USAdvOrdTrk;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOrdTrkCompletedEventHandler GetOrdTrkCompleted;
        
        /// <remarks/>
        public event GetOrdTrkSpeedCompletedEventHandler GetOrdTrkSpeedCompleted;
        
        /// <remarks/>
        public event GetOrdTrkSpeed2CompletedEventHandler GetOrdTrkSpeed2Completed;
        
        /// <remarks/>
        public event GetOrdTrkSpeedByMailCompletedEventHandler GetOrdTrkSpeedByMailCompleted;
        
        /// <remarks/>
        public event GetSerNoSAPInfoCompletedEventHandler GetSerNoSAPInfoCompleted;
        
        /// <remarks/>
        public event GetSerNoByPOCompletedEventHandler GetSerNoByPOCompleted;
        
        /// <remarks/>
        public event GetSerNoByInvoiceCompletedEventHandler GetSerNoByInvoiceCompleted;
        
        /// <remarks/>
        public event GetSerNoBySOCompletedEventHandler GetSerNoBySOCompleted;
        
        /// <remarks/>
        public event GetEXRateCompletedEventHandler GetEXRateCompleted;
        
        /// <remarks/>
        public event GetCustomerSalesTextCompletedEventHandler GetCustomerSalesTextCompleted;
        
        /// <remarks/>
        public event GetARDetailCompletedEventHandler GetARDetailCompleted;
        
        /// <remarks/>
        public event GetVenderInfoCompletedEventHandler GetVenderInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdTrk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrdTrk(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN, out string strADONETXMLout) {
            object[] results = this.Invoke("GetOrdTrk", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        KUNNR,
                        MATNR,
                        BSTNK,
                        VBELN});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdTrkAsync(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN) {
            this.GetOrdTrkAsync(VKORG, DATEB, DATEE, KUNNR, MATNR, BSTNK, VBELN, null);
        }
        
        /// <remarks/>
        public void GetOrdTrkAsync(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN, object userState) {
            if ((this.GetOrdTrkOperationCompleted == null)) {
                this.GetOrdTrkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdTrkOperationCompleted);
            }
            this.InvokeAsync("GetOrdTrk", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        KUNNR,
                        MATNR,
                        BSTNK,
                        VBELN}, this.GetOrdTrkOperationCompleted, userState);
        }
        
        private void OnGetOrdTrkOperationCompleted(object arg) {
            if ((this.GetOrdTrkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdTrkCompleted(this, new GetOrdTrkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdTrkSpeed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrdTrkSpeed(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN, out string strADONETXMLout) {
            object[] results = this.Invoke("GetOrdTrkSpeed", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        KUNNR,
                        MATNR,
                        BSTNK,
                        VBELN});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdTrkSpeedAsync(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN) {
            this.GetOrdTrkSpeedAsync(VKORG, DATEB, DATEE, KUNNR, MATNR, BSTNK, VBELN, null);
        }
        
        /// <remarks/>
        public void GetOrdTrkSpeedAsync(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN, object userState) {
            if ((this.GetOrdTrkSpeedOperationCompleted == null)) {
                this.GetOrdTrkSpeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdTrkSpeedOperationCompleted);
            }
            this.InvokeAsync("GetOrdTrkSpeed", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        KUNNR,
                        MATNR,
                        BSTNK,
                        VBELN}, this.GetOrdTrkSpeedOperationCompleted, userState);
        }
        
        private void OnGetOrdTrkSpeedOperationCompleted(object arg) {
            if ((this.GetOrdTrkSpeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdTrkSpeedCompleted(this, new GetOrdTrkSpeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdTrkSpeed2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrdTrkSpeed2(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN, out string strADONETXMLout) {
            object[] results = this.Invoke("GetOrdTrkSpeed2", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        KUNNR,
                        MATNR,
                        BSTNK,
                        VBELN});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdTrkSpeed2Async(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN) {
            this.GetOrdTrkSpeed2Async(VKORG, DATEB, DATEE, KUNNR, MATNR, BSTNK, VBELN, null);
        }
        
        /// <remarks/>
        public void GetOrdTrkSpeed2Async(string VKORG, string DATEB, string DATEE, string KUNNR, string MATNR, string BSTNK, string VBELN, object userState) {
            if ((this.GetOrdTrkSpeed2OperationCompleted == null)) {
                this.GetOrdTrkSpeed2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdTrkSpeed2OperationCompleted);
            }
            this.InvokeAsync("GetOrdTrkSpeed2", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        KUNNR,
                        MATNR,
                        BSTNK,
                        VBELN}, this.GetOrdTrkSpeed2OperationCompleted, userState);
        }
        
        private void OnGetOrdTrkSpeed2OperationCompleted(object arg) {
            if ((this.GetOrdTrkSpeed2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdTrkSpeed2Completed(this, new GetOrdTrkSpeed2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdTrkSpeedByMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrdTrkSpeedByMail(string VKORG, string DATEB, string DATEE, string email, string MATNR, string BSTNK, string VBELN, out string strADONETXMLout) {
            object[] results = this.Invoke("GetOrdTrkSpeedByMail", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        email,
                        MATNR,
                        BSTNK,
                        VBELN});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdTrkSpeedByMailAsync(string VKORG, string DATEB, string DATEE, string email, string MATNR, string BSTNK, string VBELN) {
            this.GetOrdTrkSpeedByMailAsync(VKORG, DATEB, DATEE, email, MATNR, BSTNK, VBELN, null);
        }
        
        /// <remarks/>
        public void GetOrdTrkSpeedByMailAsync(string VKORG, string DATEB, string DATEE, string email, string MATNR, string BSTNK, string VBELN, object userState) {
            if ((this.GetOrdTrkSpeedByMailOperationCompleted == null)) {
                this.GetOrdTrkSpeedByMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdTrkSpeedByMailOperationCompleted);
            }
            this.InvokeAsync("GetOrdTrkSpeedByMail", new object[] {
                        VKORG,
                        DATEB,
                        DATEE,
                        email,
                        MATNR,
                        BSTNK,
                        VBELN}, this.GetOrdTrkSpeedByMailOperationCompleted, userState);
        }
        
        private void OnGetOrdTrkSpeedByMailOperationCompleted(object arg) {
            if ((this.GetOrdTrkSpeedByMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdTrkSpeedByMailCompleted(this, new GetOrdTrkSpeedByMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSerNoSAPInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSerNoSAPInfo(string SERNOCommaSeperated, out string strADONETXMLout) {
            object[] results = this.Invoke("GetSerNoSAPInfo", new object[] {
                        SERNOCommaSeperated});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerNoSAPInfoAsync(string SERNOCommaSeperated) {
            this.GetSerNoSAPInfoAsync(SERNOCommaSeperated, null);
        }
        
        /// <remarks/>
        public void GetSerNoSAPInfoAsync(string SERNOCommaSeperated, object userState) {
            if ((this.GetSerNoSAPInfoOperationCompleted == null)) {
                this.GetSerNoSAPInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerNoSAPInfoOperationCompleted);
            }
            this.InvokeAsync("GetSerNoSAPInfo", new object[] {
                        SERNOCommaSeperated}, this.GetSerNoSAPInfoOperationCompleted, userState);
        }
        
        private void OnGetSerNoSAPInfoOperationCompleted(object arg) {
            if ((this.GetSerNoSAPInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerNoSAPInfoCompleted(this, new GetSerNoSAPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSerNoByPO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSerNoByPO(string PONbr, out string strADONETXMLout) {
            object[] results = this.Invoke("GetSerNoByPO", new object[] {
                        PONbr});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerNoByPOAsync(string PONbr) {
            this.GetSerNoByPOAsync(PONbr, null);
        }
        
        /// <remarks/>
        public void GetSerNoByPOAsync(string PONbr, object userState) {
            if ((this.GetSerNoByPOOperationCompleted == null)) {
                this.GetSerNoByPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerNoByPOOperationCompleted);
            }
            this.InvokeAsync("GetSerNoByPO", new object[] {
                        PONbr}, this.GetSerNoByPOOperationCompleted, userState);
        }
        
        private void OnGetSerNoByPOOperationCompleted(object arg) {
            if ((this.GetSerNoByPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerNoByPOCompleted(this, new GetSerNoByPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSerNoByInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSerNoByInvoice(string InvoiceNbr, out string strADONETXMLout) {
            object[] results = this.Invoke("GetSerNoByInvoice", new object[] {
                        InvoiceNbr});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerNoByInvoiceAsync(string InvoiceNbr) {
            this.GetSerNoByInvoiceAsync(InvoiceNbr, null);
        }
        
        /// <remarks/>
        public void GetSerNoByInvoiceAsync(string InvoiceNbr, object userState) {
            if ((this.GetSerNoByInvoiceOperationCompleted == null)) {
                this.GetSerNoByInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerNoByInvoiceOperationCompleted);
            }
            this.InvokeAsync("GetSerNoByInvoice", new object[] {
                        InvoiceNbr}, this.GetSerNoByInvoiceOperationCompleted, userState);
        }
        
        private void OnGetSerNoByInvoiceOperationCompleted(object arg) {
            if ((this.GetSerNoByInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerNoByInvoiceCompleted(this, new GetSerNoByInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSerNoBySO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSerNoBySO(string SONbr, out string strADONETXMLout) {
            object[] results = this.Invoke("GetSerNoBySO", new object[] {
                        SONbr});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerNoBySOAsync(string SONbr) {
            this.GetSerNoBySOAsync(SONbr, null);
        }
        
        /// <remarks/>
        public void GetSerNoBySOAsync(string SONbr, object userState) {
            if ((this.GetSerNoBySOOperationCompleted == null)) {
                this.GetSerNoBySOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerNoBySOOperationCompleted);
            }
            this.InvokeAsync("GetSerNoBySO", new object[] {
                        SONbr}, this.GetSerNoBySOOperationCompleted, userState);
        }
        
        private void OnGetSerNoBySOOperationCompleted(object arg) {
            if ((this.GetSerNoBySOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerNoBySOCompleted(this, new GetSerNoBySOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEXRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetEXRate(string FCurr_cod, System.DateTime Gdatu_inv, string Kurst, string TCurr_cod, out string strADONETXMLout) {
            object[] results = this.Invoke("GetEXRate", new object[] {
                        FCurr_cod,
                        Gdatu_inv,
                        Kurst,
                        TCurr_cod});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEXRateAsync(string FCurr_cod, System.DateTime Gdatu_inv, string Kurst, string TCurr_cod) {
            this.GetEXRateAsync(FCurr_cod, Gdatu_inv, Kurst, TCurr_cod, null);
        }
        
        /// <remarks/>
        public void GetEXRateAsync(string FCurr_cod, System.DateTime Gdatu_inv, string Kurst, string TCurr_cod, object userState) {
            if ((this.GetEXRateOperationCompleted == null)) {
                this.GetEXRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEXRateOperationCompleted);
            }
            this.InvokeAsync("GetEXRate", new object[] {
                        FCurr_cod,
                        Gdatu_inv,
                        Kurst,
                        TCurr_cod}, this.GetEXRateOperationCompleted, userState);
        }
        
        private void OnGetEXRateOperationCompleted(object arg) {
            if ((this.GetEXRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEXRateCompleted(this, new GetEXRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerSalesText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerSalesText(string pERP_ID, out string strADONETXMLout) {
            object[] results = this.Invoke("GetCustomerSalesText", new object[] {
                        pERP_ID});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerSalesTextAsync(string pERP_ID) {
            this.GetCustomerSalesTextAsync(pERP_ID, null);
        }
        
        /// <remarks/>
        public void GetCustomerSalesTextAsync(string pERP_ID, object userState) {
            if ((this.GetCustomerSalesTextOperationCompleted == null)) {
                this.GetCustomerSalesTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerSalesTextOperationCompleted);
            }
            this.InvokeAsync("GetCustomerSalesText", new object[] {
                        pERP_ID}, this.GetCustomerSalesTextOperationCompleted, userState);
        }
        
        private void OnGetCustomerSalesTextOperationCompleted(object arg) {
            if ((this.GetCustomerSalesTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerSalesTextCompleted(this, new GetCustomerSalesTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetARDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetARDetail(string VKORG, string CustID, string Channel, string Div, System.DateTime DATEDueB, System.DateTime DATEDueE, System.DateTime DATEShipB, System.DateTime DATEShipE, out string strADONETXMLout) {
            object[] results = this.Invoke("GetARDetail", new object[] {
                        VKORG,
                        CustID,
                        Channel,
                        Div,
                        DATEDueB,
                        DATEDueE,
                        DATEShipB,
                        DATEShipE});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetARDetailAsync(string VKORG, string CustID, string Channel, string Div, System.DateTime DATEDueB, System.DateTime DATEDueE, System.DateTime DATEShipB, System.DateTime DATEShipE) {
            this.GetARDetailAsync(VKORG, CustID, Channel, Div, DATEDueB, DATEDueE, DATEShipB, DATEShipE, null);
        }
        
        /// <remarks/>
        public void GetARDetailAsync(string VKORG, string CustID, string Channel, string Div, System.DateTime DATEDueB, System.DateTime DATEDueE, System.DateTime DATEShipB, System.DateTime DATEShipE, object userState) {
            if ((this.GetARDetailOperationCompleted == null)) {
                this.GetARDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARDetailOperationCompleted);
            }
            this.InvokeAsync("GetARDetail", new object[] {
                        VKORG,
                        CustID,
                        Channel,
                        Div,
                        DATEDueB,
                        DATEDueE,
                        DATEShipB,
                        DATEShipE}, this.GetARDetailOperationCompleted, userState);
        }
        
        private void OnGetARDetailOperationCompleted(object arg) {
            if ((this.GetARDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARDetailCompleted(this, new GetARDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVenderInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVenderInfo(string LIFNR, out string strADONETXMLout) {
            object[] results = this.Invoke("GetVenderInfo", new object[] {
                        LIFNR});
            strADONETXMLout = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVenderInfoAsync(string LIFNR) {
            this.GetVenderInfoAsync(LIFNR, null);
        }
        
        /// <remarks/>
        public void GetVenderInfoAsync(string LIFNR, object userState) {
            if ((this.GetVenderInfoOperationCompleted == null)) {
                this.GetVenderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenderInfoOperationCompleted);
            }
            this.InvokeAsync("GetVenderInfo", new object[] {
                        LIFNR}, this.GetVenderInfoOperationCompleted, userState);
        }
        
        private void OnGetVenderInfoOperationCompleted(object arg) {
            if ((this.GetVenderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenderInfoCompleted(this, new GetVenderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrdTrkCompletedEventHandler(object sender, GetOrdTrkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdTrkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdTrkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrdTrkSpeedCompletedEventHandler(object sender, GetOrdTrkSpeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdTrkSpeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdTrkSpeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrdTrkSpeed2CompletedEventHandler(object sender, GetOrdTrkSpeed2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdTrkSpeed2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdTrkSpeed2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrdTrkSpeedByMailCompletedEventHandler(object sender, GetOrdTrkSpeedByMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdTrkSpeedByMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdTrkSpeedByMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSerNoSAPInfoCompletedEventHandler(object sender, GetSerNoSAPInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerNoSAPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerNoSAPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSerNoByPOCompletedEventHandler(object sender, GetSerNoByPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerNoByPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerNoByPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSerNoByInvoiceCompletedEventHandler(object sender, GetSerNoByInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerNoByInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerNoByInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSerNoBySOCompletedEventHandler(object sender, GetSerNoBySOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerNoBySOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerNoBySOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEXRateCompletedEventHandler(object sender, GetEXRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEXRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEXRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerSalesTextCompletedEventHandler(object sender, GetCustomerSalesTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerSalesTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerSalesTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetARDetailCompletedEventHandler(object sender, GetARDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVenderInfoCompletedEventHandler(object sender, GetVenderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strADONETXMLout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591