//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using eStore.POCOS.PocoX;
 

namespace eStore.POCOS
{
    public partial class ECOPartner
    {
        #region Primitive Properties
     
    	public List<ErrorMessage> error_message{
    		get;
    		set;
    	}
    
    
        public virtual int PartnerId
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string FirstName
        {
            get;
            set;
        }
    
        public virtual string LastName
        {
            get;
            set;
        }
    
        public virtual string CompanyName
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual string Status
        {
            get;
            set;
        }
    
        public virtual string ImageUrl
        {
            get;
            set;
        }
    
        public virtual string WebSiteUrl
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual string ZipCode
        {
            get;
            set;
        }
    
        public virtual string TelNo
        {
            get;
            set;
        }
    
        public virtual string ContactTime
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreatedDate
        {
            get;
            set;
        }
    
        public virtual string CountryName
        {
            get;
            set;
        }
    
        public virtual string State
        {
            get;
            set;
        }

        #endregion

        #region Validation
    	
    	public bool validate() {
    		error_message = new List<ErrorMessage>();
    	   
    	   
    	   if(error_message.Count>0) {
    	   	return false;
    	   }else {
    	    return true;
    	   }
    	
    	}
    	
    	/* public void Write()
        {
            Type type = typeof(ECOPartner); // Get type pointer
             PropertyInfo[] fields = type.GetProperties(); // Obtain all fields
                foreach (var pinfo in fields) // Loop through fields
                {
                    string name = pinfo.Name; // Get string name
                    object temp = pinfo.GetValue(pinfo.Name,null); // Get value
                if (temp is int) // See if it is an integer.
                {
                    int value = (int)temp;
                    Console.Write(name);
                    Console.Write(" (int) = ");
                    Console.WriteLine(value);
                }
                else if (temp is string) // See if it is a string.
                {
                    string value = temp as string;
                    Console.Write(name);
                    Console.Write(" (string) = ");
                    Console.WriteLine(value);
                }
            }
        }*/
     
    	
    	
        #endregion

        #region Navigation Properties
    
        public virtual ICollection<ECOPartnerIndustry> ECOPartnerIndustries
        {
            get
            {
                if (_eCOPartnerIndustries == null)
                {
                    var newCollection = new FixupCollection<ECOPartnerIndustry>();
                    newCollection.CollectionChanged += FixupECOPartnerIndustries;
                    _eCOPartnerIndustries = newCollection;
                }
                return _eCOPartnerIndustries;
            }
            set
            {
                if (!ReferenceEquals(_eCOPartnerIndustries, value))
                {
                    var previousValue = _eCOPartnerIndustries as FixupCollection<ECOPartnerIndustry>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupECOPartnerIndustries;
                    }
                    _eCOPartnerIndustries = value;
                    var newValue = value as FixupCollection<ECOPartnerIndustry>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupECOPartnerIndustries;
                    }
                }
            }
        }
        private ICollection<ECOPartnerIndustry> _eCOPartnerIndustries;
    
        public virtual ICollection<ECOPartnerServiceCoverage> ECOPartnerServiceCoverages
        {
            get
            {
                if (_eCOPartnerServiceCoverages == null)
                {
                    var newCollection = new FixupCollection<ECOPartnerServiceCoverage>();
                    newCollection.CollectionChanged += FixupECOPartnerServiceCoverages;
                    _eCOPartnerServiceCoverages = newCollection;
                }
                return _eCOPartnerServiceCoverages;
            }
            set
            {
                if (!ReferenceEquals(_eCOPartnerServiceCoverages, value))
                {
                    var previousValue = _eCOPartnerServiceCoverages as FixupCollection<ECOPartnerServiceCoverage>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupECOPartnerServiceCoverages;
                    }
                    _eCOPartnerServiceCoverages = value;
                    var newValue = value as FixupCollection<ECOPartnerServiceCoverage>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupECOPartnerServiceCoverages;
                    }
                }
            }
        }
        private ICollection<ECOPartnerServiceCoverage> _eCOPartnerServiceCoverages;
    
        public virtual ICollection<ECOPartnerSpecialty> ECOPartnerSpecialties
        {
            get
            {
                if (_eCOPartnerSpecialties == null)
                {
                    var newCollection = new FixupCollection<ECOPartnerSpecialty>();
                    newCollection.CollectionChanged += FixupECOPartnerSpecialties;
                    _eCOPartnerSpecialties = newCollection;
                }
                return _eCOPartnerSpecialties;
            }
            set
            {
                if (!ReferenceEquals(_eCOPartnerSpecialties, value))
                {
                    var previousValue = _eCOPartnerSpecialties as FixupCollection<ECOPartnerSpecialty>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupECOPartnerSpecialties;
                    }
                    _eCOPartnerSpecialties = value;
                    var newValue = value as FixupCollection<ECOPartnerSpecialty>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupECOPartnerSpecialties;
                    }
                }
            }
        }
        private ICollection<ECOPartnerSpecialty> _eCOPartnerSpecialties;

        #endregion

        #region Association Fixup
    
        private void FixupECOPartnerIndustries(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ECOPartnerIndustry item in e.NewItems)
                {
                    item.ECOPartner = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ECOPartnerIndustry item in e.OldItems)
                {
                    if (ReferenceEquals(item.ECOPartner, this))
                    {
                        item.ECOPartner = null;
                    }
                }
            }
        }
    
        private void FixupECOPartnerServiceCoverages(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ECOPartnerServiceCoverage item in e.NewItems)
                {
                    item.ECOPartner = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ECOPartnerServiceCoverage item in e.OldItems)
                {
                    if (ReferenceEquals(item.ECOPartner, this))
                    {
                        item.ECOPartner = null;
                    }
                }
            }
        }
    
        private void FixupECOPartnerSpecialties(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ECOPartnerSpecialty item in e.NewItems)
                {
                    item.ECOPartner = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ECOPartnerSpecialty item in e.OldItems)
                {
                    if (ReferenceEquals(item.ECOPartner, this))
                    {
                        item.ECOPartner = null;
                    }
                }
            }
        }

        #endregion

    }
}
