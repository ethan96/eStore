//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using eStore.POCOS.PocoX;
 

namespace eStore.POCOS
{
    public partial class ReplicationCategoryProductsMapping
    {
        #region Primitive Properties
     
    	public List<ErrorMessage> error_message{
    		get;
    		set;
    	}
    
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual string StoreIDFrom
        {
            get { return _storeIDFrom; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_storeIDFrom != value)
                    {
                        if (ProductCategory != null && ProductCategory.Storeid != value)
                        {
                            var previousValue = _productCategory;
                            _productCategory = null;
                            FixupProductCategory(previousValue, skipKeys: true);
                        }
                        _storeIDFrom = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _storeIDFrom;
    
        public virtual Nullable<int> CategoryIDFrom
        {
            get { return _categoryIDFrom; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_categoryIDFrom != value)
                    {
                        if (ProductCategory != null && ProductCategory.CategoryID != value)
                        {
                            var previousValue = _productCategory;
                            _productCategory = null;
                            FixupProductCategory(previousValue, skipKeys: true);
                        }
                        _categoryIDFrom = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _categoryIDFrom;
    
        public virtual string StoreIDTo
        {
            get { return _storeIDTo; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_storeIDTo != value)
                    {
                        if (ProductCategory1 != null && ProductCategory1.Storeid != value)
                        {
                            var previousValue = _productCategory1;
                            _productCategory1 = null;
                            FixupProductCategory1(previousValue, skipKeys: true);
                        }
                        _storeIDTo = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _storeIDTo;
    
        public virtual Nullable<int> CategoryIDTo
        {
            get { return _categoryIDTo; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_categoryIDTo != value)
                    {
                        if (ProductCategory1 != null && ProductCategory1.CategoryID != value)
                        {
                            var previousValue = _productCategory1;
                            _productCategory1 = null;
                            FixupProductCategory1(previousValue, skipKeys: true);
                        }
                        _categoryIDTo = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _categoryIDTo;
    
        public virtual bool IsActive
        {
            get;
            set;
        }

        #endregion

        #region Validation
    	
    	public bool validate() {
    		error_message = new List<ErrorMessage>();
    	   
    	   
    	   if(error_message.Count>0) {
    	   	return false;
    	   }else {
    	    return true;
    	   }
    	
    	}
    	
    	/* public void Write()
        {
            Type type = typeof(ReplicationCategoryProductsMapping); // Get type pointer
             PropertyInfo[] fields = type.GetProperties(); // Obtain all fields
                foreach (var pinfo in fields) // Loop through fields
                {
                    string name = pinfo.Name; // Get string name
                    object temp = pinfo.GetValue(pinfo.Name,null); // Get value
                if (temp is int) // See if it is an integer.
                {
                    int value = (int)temp;
                    Console.Write(name);
                    Console.Write(" (int) = ");
                    Console.WriteLine(value);
                }
                else if (temp is string) // See if it is a string.
                {
                    string value = temp as string;
                    Console.Write(name);
                    Console.Write(" (string) = ");
                    Console.WriteLine(value);
                }
            }
        }*/
     
    	
    	
        #endregion

        #region Navigation Properties
    
        public virtual ProductCategory ProductCategory
        {
            get { return _productCategory; }
            set
            {
                if (!ReferenceEquals(_productCategory, value))
                {
                    var previousValue = _productCategory;
                    _productCategory = value;
                    FixupProductCategory(previousValue);
                }
            }
        }
        private ProductCategory _productCategory;
    
        public virtual ProductCategory ProductCategory1
        {
            get { return _productCategory1; }
            set
            {
                if (!ReferenceEquals(_productCategory1, value))
                {
                    var previousValue = _productCategory1;
                    _productCategory1 = value;
                    FixupProductCategory1(previousValue);
                }
            }
        }
        private ProductCategory _productCategory1;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupProductCategory(ProductCategory previousValue, bool skipKeys = false)
        {
            if (previousValue != null && previousValue.ReplicationCategoryProductsMappings.Contains(this))
            {
                previousValue.ReplicationCategoryProductsMappings.Remove(this);
            }
    
            if (ProductCategory != null)
            {
                if (!ProductCategory.ReplicationCategoryProductsMappings.Contains(this))
                {
                    ProductCategory.ReplicationCategoryProductsMappings.Add(this);
                }
                if (StoreIDFrom != ProductCategory.Storeid)
                {
                    StoreIDFrom = ProductCategory.Storeid;
                }
                if (CategoryIDFrom != ProductCategory.CategoryID)
                {
                    CategoryIDFrom = ProductCategory.CategoryID;
                }
            }
            else if (!_settingFK && !skipKeys)
            {
                StoreIDFrom = null;
                CategoryIDFrom = null;
            }
        }
    
        private void FixupProductCategory1(ProductCategory previousValue, bool skipKeys = false)
        {
            if (previousValue != null && previousValue.ReplicationCategoryProductsMappings1.Contains(this))
            {
                previousValue.ReplicationCategoryProductsMappings1.Remove(this);
            }
    
            if (ProductCategory1 != null)
            {
                if (!ProductCategory1.ReplicationCategoryProductsMappings1.Contains(this))
                {
                    ProductCategory1.ReplicationCategoryProductsMappings1.Add(this);
                }
                if (StoreIDTo != ProductCategory1.Storeid)
                {
                    StoreIDTo = ProductCategory1.Storeid;
                }
                if (CategoryIDTo != ProductCategory1.CategoryID)
                {
                    CategoryIDTo = ProductCategory1.CategoryID;
                }
            }
            else if (!_settingFK && !skipKeys)
            {
                StoreIDTo = null;
                CategoryIDTo = null;
            }
        }

        #endregion

    }
}
