//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using eStore.POCOS.PocoX;
 

namespace eStore.POCOS
{
    public partial class StoreProductAssociate
    {
        #region Primitive Properties
     
    	public List<ErrorMessage> error_message{
    		get;
    		set;
    	}
    
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int StoreProductId
        {
            get { return _storeProductId; }
            set
            {
                if (_storeProductId != value)
                {
                    if (StoreProduct1 != null && StoreProduct1.Id != value)
                    {
                        StoreProduct1 = null;
                    }
                    _storeProductId = value;
                }
            }
        }
        private int _storeProductId;
    
        public virtual int AssociateStoreProductId
        {
            get { return _associateStoreProductId; }
            set
            {
                if (_associateStoreProductId != value)
                {
                    if (StoreProduct != null && StoreProduct.Id != value)
                    {
                        StoreProduct = null;
                    }
                    _associateStoreProductId = value;
                }
            }
        }
        private int _associateStoreProductId;
    
        public virtual int OrdinalNo
        {
            get;
            set;
        }
    
        public virtual string Note
        {
            get;
            set;
        }

        #endregion

        #region Validation
    	
    	public bool validate() {
    		error_message = new List<ErrorMessage>();
    	   
    	   
    	   if(error_message.Count>0) {
    	   	return false;
    	   }else {
    	    return true;
    	   }
    	
    	}
    	
    	/* public void Write()
        {
            Type type = typeof(StoreProductAssociate); // Get type pointer
             PropertyInfo[] fields = type.GetProperties(); // Obtain all fields
                foreach (var pinfo in fields) // Loop through fields
                {
                    string name = pinfo.Name; // Get string name
                    object temp = pinfo.GetValue(pinfo.Name,null); // Get value
                if (temp is int) // See if it is an integer.
                {
                    int value = (int)temp;
                    Console.Write(name);
                    Console.Write(" (int) = ");
                    Console.WriteLine(value);
                }
                else if (temp is string) // See if it is a string.
                {
                    string value = temp as string;
                    Console.Write(name);
                    Console.Write(" (string) = ");
                    Console.WriteLine(value);
                }
            }
        }*/
     
    	
    	
        #endregion

        #region Navigation Properties
    
        public virtual StoreProduct StoreProduct
        {
            get { return _storeProduct; }
            set
            {
                if (!ReferenceEquals(_storeProduct, value))
                {
                    var previousValue = _storeProduct;
                    _storeProduct = value;
                    FixupStoreProduct(previousValue);
                }
            }
        }
        private StoreProduct _storeProduct;
    
        public virtual StoreProduct StoreProduct1
        {
            get { return _storeProduct1; }
            set
            {
                if (!ReferenceEquals(_storeProduct1, value))
                {
                    var previousValue = _storeProduct1;
                    _storeProduct1 = value;
                    FixupStoreProduct1(previousValue);
                }
            }
        }
        private StoreProduct _storeProduct1;

        #endregion

        #region Association Fixup
    
        private void FixupStoreProduct(StoreProduct previousValue)
        {
            if (previousValue != null && previousValue.StoreProductAssociates.Contains(this))
            {
                previousValue.StoreProductAssociates.Remove(this);
            }
    
            if (StoreProduct != null)
            {
                if (!StoreProduct.StoreProductAssociates.Contains(this))
                {
                    StoreProduct.StoreProductAssociates.Add(this);
                }
                if (AssociateStoreProductId != StoreProduct.Id)
                {
                    AssociateStoreProductId = StoreProduct.Id;
                }
            }
        }
    
        private void FixupStoreProduct1(StoreProduct previousValue)
        {
            if (previousValue != null && previousValue.StoreProductAssociates1.Contains(this))
            {
                previousValue.StoreProductAssociates1.Remove(this);
            }
    
            if (StoreProduct1 != null)
            {
                if (!StoreProduct1.StoreProductAssociates1.Contains(this))
                {
                    StoreProduct1.StoreProductAssociates1.Add(this);
                }
                if (StoreProductId != StoreProduct1.Id)
                {
                    StoreProductId = StoreProduct1.Id;
                }
            }
        }

        #endregion

    }
}
