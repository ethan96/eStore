//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eStore.POCOS.AdvantechPartner {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdvantechWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AdvantechWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRating2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAverageRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRating2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getPartnerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRBUInfoByCountryBUOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChannelPartnerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPartnerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBannerLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductTypeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCMSViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPageInfoWithUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePageInfoWithUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageInfoUserAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPageViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageViewsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSEOAdminAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartnerLogoByAccountRowIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Comment_GetByRecord_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Comment_GetReplyBySIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Comment_AddByRecord_IDandUser_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Comment_DeleteBySIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_eCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSRNotifyEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurgeRequestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdvantechWebService() {
            this.Url = global::eStore.POCOS.Properties.Settings.Default.esPOCOS_AdvantechPartner_AdvantechWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddRatingCompletedEventHandler AddRatingCompleted;
        
        /// <remarks/>
        public event AddRating2CompletedEventHandler AddRating2Completed;
        
        /// <remarks/>
        public event GetAverageRateCompletedEventHandler GetAverageRateCompleted;
        
        /// <remarks/>
        public event GetRatingCompletedEventHandler GetRatingCompleted;
        
        /// <remarks/>
        public event GetRating2CompletedEventHandler GetRating2Completed;
        
        /// <remarks/>
        public event getPartnerInfoCompletedEventHandler getPartnerInfoCompleted;
        
        /// <remarks/>
        public event getRBUInfoByCountryBUCompletedEventHandler getRBUInfoByCountryBUCompleted;
        
        /// <remarks/>
        public event getChannelPartnerListCompletedEventHandler getChannelPartnerListCompleted;
        
        /// <remarks/>
        public event getPartnerIDCompletedEventHandler getPartnerIDCompleted;
        
        /// <remarks/>
        public event AddBannerLogCompletedEventHandler AddBannerLogCompleted;
        
        /// <remarks/>
        public event AddProductLogCompletedEventHandler AddProductLogCompleted;
        
        /// <remarks/>
        public event AddProductTypeLogCompletedEventHandler AddProductTypeLogCompleted;
        
        /// <remarks/>
        public event AddCMSViewCompletedEventHandler AddCMSViewCompleted;
        
        /// <remarks/>
        public event GetCountCompletedEventHandler GetCountCompleted;
        
        /// <remarks/>
        public event AddPageInfoCompletedEventHandler AddPageInfoCompleted;
        
        /// <remarks/>
        public event UpdatePageInfoCompletedEventHandler UpdatePageInfoCompleted;
        
        /// <remarks/>
        public event AddPageInfoWithUserCompletedEventHandler AddPageInfoWithUserCompleted;
        
        /// <remarks/>
        public event UpdatePageInfoWithUserCompletedEventHandler UpdatePageInfoWithUserCompleted;
        
        /// <remarks/>
        public event DeletePageInfoCompletedEventHandler DeletePageInfoCompleted;
        
        /// <remarks/>
        public event GetPageInfoUserAccessCompletedEventHandler GetPageInfoUserAccessCompleted;
        
        /// <remarks/>
        public event SetPageViewsCompletedEventHandler SetPageViewsCompleted;
        
        /// <remarks/>
        public event GetPageViewsCompletedEventHandler GetPageViewsCompleted;
        
        /// <remarks/>
        public event GetPageViewsByDateCompletedEventHandler GetPageViewsByDateCompleted;
        
        /// <remarks/>
        public event IsSEOAdminAccessCompletedEventHandler IsSEOAdminAccessCompleted;
        
        /// <remarks/>
        public event checkUserCompletedEventHandler checkUserCompleted;
        
        /// <remarks/>
        public event GetPartnerLogoByAccountRowIDCompletedEventHandler GetPartnerLogoByAccountRowIDCompleted;
        
        /// <remarks/>
        public event Comment_GetByRecord_IDCompletedEventHandler Comment_GetByRecord_IDCompleted;
        
        /// <remarks/>
        public event Comment_GetReplyBySIDCompletedEventHandler Comment_GetReplyBySIDCompleted;
        
        /// <remarks/>
        public event Comment_AddByRecord_IDandUser_IDCompletedEventHandler Comment_AddByRecord_IDandUser_IDCompleted;
        
        /// <remarks/>
        public event Comment_DeleteBySIDCompletedEventHandler Comment_DeleteBySIDCompleted;
        
        /// <remarks/>
        public event get_eCatalogCompletedEventHandler get_eCatalogCompleted;
        
        /// <remarks/>
        public event sendSRNotifyEmailCompletedEventHandler sendSRNotifyEmailCompleted;
        
        /// <remarks/>
        public event CreatePurgeRequestCompletedEventHandler CreatePurgeRequestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddRating(string title, string url, int rate, string userid, string comments, string IP) {
            object[] results = this.Invoke("AddRating", new object[] {
                        title,
                        url,
                        rate,
                        userid,
                        comments,
                        IP});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddRatingAsync(string title, string url, int rate, string userid, string comments, string IP) {
            this.AddRatingAsync(title, url, rate, userid, comments, IP, null);
        }
        
        /// <remarks/>
        public void AddRatingAsync(string title, string url, int rate, string userid, string comments, string IP, object userState) {
            if ((this.AddRatingOperationCompleted == null)) {
                this.AddRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRatingOperationCompleted);
            }
            this.InvokeAsync("AddRating", new object[] {
                        title,
                        url,
                        rate,
                        userid,
                        comments,
                        IP}, this.AddRatingOperationCompleted, userState);
        }
        
        private void OnAddRatingOperationCompleted(object arg) {
            if ((this.AddRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRatingCompleted(this, new AddRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRating2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddRating2(string title, string url, int rate, string userid, string comments, string IP, string from_email, string type) {
            object[] results = this.Invoke("AddRating2", new object[] {
                        title,
                        url,
                        rate,
                        userid,
                        comments,
                        IP,
                        from_email,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddRating2Async(string title, string url, int rate, string userid, string comments, string IP, string from_email, string type) {
            this.AddRating2Async(title, url, rate, userid, comments, IP, from_email, type, null);
        }
        
        /// <remarks/>
        public void AddRating2Async(string title, string url, int rate, string userid, string comments, string IP, string from_email, string type, object userState) {
            if ((this.AddRating2OperationCompleted == null)) {
                this.AddRating2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRating2OperationCompleted);
            }
            this.InvokeAsync("AddRating2", new object[] {
                        title,
                        url,
                        rate,
                        userid,
                        comments,
                        IP,
                        from_email,
                        type}, this.AddRating2OperationCompleted, userState);
        }
        
        private void OnAddRating2OperationCompleted(object arg) {
            if ((this.AddRating2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRating2Completed(this, new AddRating2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAverageRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAverageRate(string url, string type) {
            object[] results = this.Invoke("GetAverageRate", new object[] {
                        url,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAverageRateAsync(string url, string type) {
            this.GetAverageRateAsync(url, type, null);
        }
        
        /// <remarks/>
        public void GetAverageRateAsync(string url, string type, object userState) {
            if ((this.GetAverageRateOperationCompleted == null)) {
                this.GetAverageRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAverageRateOperationCompleted);
            }
            this.InvokeAsync("GetAverageRate", new object[] {
                        url,
                        type}, this.GetAverageRateOperationCompleted, userState);
        }
        
        private void OnGetAverageRateOperationCompleted(object arg) {
            if ((this.GetAverageRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAverageRateCompleted(this, new GetAverageRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRating(string url, string userid) {
            object[] results = this.Invoke("GetRating", new object[] {
                        url,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatingAsync(string url, string userid) {
            this.GetRatingAsync(url, userid, null);
        }
        
        /// <remarks/>
        public void GetRatingAsync(string url, string userid, object userState) {
            if ((this.GetRatingOperationCompleted == null)) {
                this.GetRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatingOperationCompleted);
            }
            this.InvokeAsync("GetRating", new object[] {
                        url,
                        userid}, this.GetRatingOperationCompleted, userState);
        }
        
        private void OnGetRatingOperationCompleted(object arg) {
            if ((this.GetRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatingCompleted(this, new GetRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRating2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRating2(string url) {
            object[] results = this.Invoke("GetRating2", new object[] {
                        url});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRating2Async(string url) {
            this.GetRating2Async(url, null);
        }
        
        /// <remarks/>
        public void GetRating2Async(string url, object userState) {
            if ((this.GetRating2OperationCompleted == null)) {
                this.GetRating2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRating2OperationCompleted);
            }
            this.InvokeAsync("GetRating2", new object[] {
                        url}, this.GetRating2OperationCompleted, userState);
        }
        
        private void OnGetRating2OperationCompleted(object arg) {
            if ((this.GetRating2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRating2Completed(this, new GetRating2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPartnerInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getPartnerInfo(string strID) {
            object[] results = this.Invoke("getPartnerInfo", new object[] {
                        strID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getPartnerInfoAsync(string strID) {
            this.getPartnerInfoAsync(strID, null);
        }
        
        /// <remarks/>
        public void getPartnerInfoAsync(string strID, object userState) {
            if ((this.getPartnerInfoOperationCompleted == null)) {
                this.getPartnerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPartnerInfoOperationCompleted);
            }
            this.InvokeAsync("getPartnerInfo", new object[] {
                        strID}, this.getPartnerInfoOperationCompleted, userState);
        }
        
        private void OngetPartnerInfoOperationCompleted(object arg) {
            if ((this.getPartnerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPartnerInfoCompleted(this, new getPartnerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRBUInfoByCountryBU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getRBUInfoByCountryBU(string Country, string BU) {
            object[] results = this.Invoke("getRBUInfoByCountryBU", new object[] {
                        Country,
                        BU});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getRBUInfoByCountryBUAsync(string Country, string BU) {
            this.getRBUInfoByCountryBUAsync(Country, BU, null);
        }
        
        /// <remarks/>
        public void getRBUInfoByCountryBUAsync(string Country, string BU, object userState) {
            if ((this.getRBUInfoByCountryBUOperationCompleted == null)) {
                this.getRBUInfoByCountryBUOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRBUInfoByCountryBUOperationCompleted);
            }
            this.InvokeAsync("getRBUInfoByCountryBU", new object[] {
                        Country,
                        BU}, this.getRBUInfoByCountryBUOperationCompleted, userState);
        }
        
        private void OngetRBUInfoByCountryBUOperationCompleted(object arg) {
            if ((this.getRBUInfoByCountryBUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRBUInfoByCountryBUCompleted(this, new getRBUInfoByCountryBUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getChannelPartnerList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getChannelPartnerList(string BU, string country) {
            object[] results = this.Invoke("getChannelPartnerList", new object[] {
                        BU,
                        country});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getChannelPartnerListAsync(string BU, string country) {
            this.getChannelPartnerListAsync(BU, country, null);
        }
        
        /// <remarks/>
        public void getChannelPartnerListAsync(string BU, string country, object userState) {
            if ((this.getChannelPartnerListOperationCompleted == null)) {
                this.getChannelPartnerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChannelPartnerListOperationCompleted);
            }
            this.InvokeAsync("getChannelPartnerList", new object[] {
                        BU,
                        country}, this.getChannelPartnerListOperationCompleted, userState);
        }
        
        private void OngetChannelPartnerListOperationCompleted(object arg) {
            if ((this.getChannelPartnerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChannelPartnerListCompleted(this, new getChannelPartnerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPartnerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPartnerID(string email) {
            object[] results = this.Invoke("getPartnerID", new object[] {
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPartnerIDAsync(string email) {
            this.getPartnerIDAsync(email, null);
        }
        
        /// <remarks/>
        public void getPartnerIDAsync(string email, object userState) {
            if ((this.getPartnerIDOperationCompleted == null)) {
                this.getPartnerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPartnerIDOperationCompleted);
            }
            this.InvokeAsync("getPartnerID", new object[] {
                        email}, this.getPartnerIDOperationCompleted, userState);
        }
        
        private void OngetPartnerIDOperationCompleted(object arg) {
            if ((this.getPartnerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPartnerIDCompleted(this, new getPartnerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddBannerLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddBannerLog(int ID, string Type, string site, string IP) {
            this.Invoke("AddBannerLog", new object[] {
                        ID,
                        Type,
                        site,
                        IP});
        }
        
        /// <remarks/>
        public void AddBannerLogAsync(int ID, string Type, string site, string IP) {
            this.AddBannerLogAsync(ID, Type, site, IP, null);
        }
        
        /// <remarks/>
        public void AddBannerLogAsync(int ID, string Type, string site, string IP, object userState) {
            if ((this.AddBannerLogOperationCompleted == null)) {
                this.AddBannerLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBannerLogOperationCompleted);
            }
            this.InvokeAsync("AddBannerLog", new object[] {
                        ID,
                        Type,
                        site,
                        IP}, this.AddBannerLogOperationCompleted, userState);
        }
        
        private void OnAddBannerLogOperationCompleted(object arg) {
            if ((this.AddBannerLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBannerLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProductLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddProductLog(string CATEGORY_ID, string PARENT_CATEGORY_ID, string BU, string site, string IP) {
            this.Invoke("AddProductLog", new object[] {
                        CATEGORY_ID,
                        PARENT_CATEGORY_ID,
                        BU,
                        site,
                        IP});
        }
        
        /// <remarks/>
        public void AddProductLogAsync(string CATEGORY_ID, string PARENT_CATEGORY_ID, string BU, string site, string IP) {
            this.AddProductLogAsync(CATEGORY_ID, PARENT_CATEGORY_ID, BU, site, IP, null);
        }
        
        /// <remarks/>
        public void AddProductLogAsync(string CATEGORY_ID, string PARENT_CATEGORY_ID, string BU, string site, string IP, object userState) {
            if ((this.AddProductLogOperationCompleted == null)) {
                this.AddProductLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductLogOperationCompleted);
            }
            this.InvokeAsync("AddProductLog", new object[] {
                        CATEGORY_ID,
                        PARENT_CATEGORY_ID,
                        BU,
                        site,
                        IP}, this.AddProductLogOperationCompleted, userState);
        }
        
        private void OnAddProductLogOperationCompleted(object arg) {
            if ((this.AddProductLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProductTypeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddProductTypeLog(string CATEGORY_ID, string PARENT_CATEGORY_ID, string BU, string site, string IP, string Type) {
            this.Invoke("AddProductTypeLog", new object[] {
                        CATEGORY_ID,
                        PARENT_CATEGORY_ID,
                        BU,
                        site,
                        IP,
                        Type});
        }
        
        /// <remarks/>
        public void AddProductTypeLogAsync(string CATEGORY_ID, string PARENT_CATEGORY_ID, string BU, string site, string IP, string Type) {
            this.AddProductTypeLogAsync(CATEGORY_ID, PARENT_CATEGORY_ID, BU, site, IP, Type, null);
        }
        
        /// <remarks/>
        public void AddProductTypeLogAsync(string CATEGORY_ID, string PARENT_CATEGORY_ID, string BU, string site, string IP, string Type, object userState) {
            if ((this.AddProductTypeLogOperationCompleted == null)) {
                this.AddProductTypeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductTypeLogOperationCompleted);
            }
            this.InvokeAsync("AddProductTypeLog", new object[] {
                        CATEGORY_ID,
                        PARENT_CATEGORY_ID,
                        BU,
                        site,
                        IP,
                        Type}, this.AddProductTypeLogOperationCompleted, userState);
        }
        
        private void OnAddProductTypeLogOperationCompleted(object arg) {
            if ((this.AddProductTypeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductTypeLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCMSView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCMSView(string RECORD_ID, bool add) {
            object[] results = this.Invoke("AddCMSView", new object[] {
                        RECORD_ID,
                        add});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCMSViewAsync(string RECORD_ID, bool add) {
            this.AddCMSViewAsync(RECORD_ID, add, null);
        }
        
        /// <remarks/>
        public void AddCMSViewAsync(string RECORD_ID, bool add, object userState) {
            if ((this.AddCMSViewOperationCompleted == null)) {
                this.AddCMSViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCMSViewOperationCompleted);
            }
            this.InvokeAsync("AddCMSView", new object[] {
                        RECORD_ID,
                        add}, this.AddCMSViewOperationCompleted, userState);
        }
        
        private void OnAddCMSViewOperationCompleted(object arg) {
            if ((this.AddCMSViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCMSViewCompleted(this, new AddCMSViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCount(string url, string type) {
            object[] results = this.Invoke("GetCount", new object[] {
                        url,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAsync(string url, string type) {
            this.GetCountAsync(url, type, null);
        }
        
        /// <remarks/>
        public void GetCountAsync(string url, string type, object userState) {
            if ((this.GetCountOperationCompleted == null)) {
                this.GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountOperationCompleted);
            }
            this.InvokeAsync("GetCount", new object[] {
                        url,
                        type}, this.GetCountOperationCompleted, userState);
        }
        
        private void OnGetCountOperationCompleted(object arg) {
            if ((this.GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountCompleted(this, new GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPageInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddPageInfo(string title, string keywords, string description, string lang, string path) {
            object[] results = this.Invoke("AddPageInfo", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPageInfoAsync(string title, string keywords, string description, string lang, string path) {
            this.AddPageInfoAsync(title, keywords, description, lang, path, null);
        }
        
        /// <remarks/>
        public void AddPageInfoAsync(string title, string keywords, string description, string lang, string path, object userState) {
            if ((this.AddPageInfoOperationCompleted == null)) {
                this.AddPageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPageInfoOperationCompleted);
            }
            this.InvokeAsync("AddPageInfo", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path}, this.AddPageInfoOperationCompleted, userState);
        }
        
        private void OnAddPageInfoOperationCompleted(object arg) {
            if ((this.AddPageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPageInfoCompleted(this, new AddPageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePageInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePageInfo(string title, string keywords, string description, string lang, string path) {
            object[] results = this.Invoke("UpdatePageInfo", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePageInfoAsync(string title, string keywords, string description, string lang, string path) {
            this.UpdatePageInfoAsync(title, keywords, description, lang, path, null);
        }
        
        /// <remarks/>
        public void UpdatePageInfoAsync(string title, string keywords, string description, string lang, string path, object userState) {
            if ((this.UpdatePageInfoOperationCompleted == null)) {
                this.UpdatePageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePageInfoOperationCompleted);
            }
            this.InvokeAsync("UpdatePageInfo", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path}, this.UpdatePageInfoOperationCompleted, userState);
        }
        
        private void OnUpdatePageInfoOperationCompleted(object arg) {
            if ((this.UpdatePageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePageInfoCompleted(this, new UpdatePageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPageInfoWithUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddPageInfoWithUser(string title, string keywords, string description, string lang, string path, string userEmail) {
            object[] results = this.Invoke("AddPageInfoWithUser", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path,
                        userEmail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPageInfoWithUserAsync(string title, string keywords, string description, string lang, string path, string userEmail) {
            this.AddPageInfoWithUserAsync(title, keywords, description, lang, path, userEmail, null);
        }
        
        /// <remarks/>
        public void AddPageInfoWithUserAsync(string title, string keywords, string description, string lang, string path, string userEmail, object userState) {
            if ((this.AddPageInfoWithUserOperationCompleted == null)) {
                this.AddPageInfoWithUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPageInfoWithUserOperationCompleted);
            }
            this.InvokeAsync("AddPageInfoWithUser", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path,
                        userEmail}, this.AddPageInfoWithUserOperationCompleted, userState);
        }
        
        private void OnAddPageInfoWithUserOperationCompleted(object arg) {
            if ((this.AddPageInfoWithUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPageInfoWithUserCompleted(this, new AddPageInfoWithUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePageInfoWithUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePageInfoWithUser(string title, string keywords, string description, string lang, string path, string userEmail) {
            object[] results = this.Invoke("UpdatePageInfoWithUser", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path,
                        userEmail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePageInfoWithUserAsync(string title, string keywords, string description, string lang, string path, string userEmail) {
            this.UpdatePageInfoWithUserAsync(title, keywords, description, lang, path, userEmail, null);
        }
        
        /// <remarks/>
        public void UpdatePageInfoWithUserAsync(string title, string keywords, string description, string lang, string path, string userEmail, object userState) {
            if ((this.UpdatePageInfoWithUserOperationCompleted == null)) {
                this.UpdatePageInfoWithUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePageInfoWithUserOperationCompleted);
            }
            this.InvokeAsync("UpdatePageInfoWithUser", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path,
                        userEmail}, this.UpdatePageInfoWithUserOperationCompleted, userState);
        }
        
        private void OnUpdatePageInfoWithUserOperationCompleted(object arg) {
            if ((this.UpdatePageInfoWithUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePageInfoWithUserCompleted(this, new UpdatePageInfoWithUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePageInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePageInfo(string title, string keywords, string description, string lang, string path) {
            object[] results = this.Invoke("DeletePageInfo", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePageInfoAsync(string title, string keywords, string description, string lang, string path) {
            this.DeletePageInfoAsync(title, keywords, description, lang, path, null);
        }
        
        /// <remarks/>
        public void DeletePageInfoAsync(string title, string keywords, string description, string lang, string path, object userState) {
            if ((this.DeletePageInfoOperationCompleted == null)) {
                this.DeletePageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePageInfoOperationCompleted);
            }
            this.InvokeAsync("DeletePageInfo", new object[] {
                        title,
                        keywords,
                        description,
                        lang,
                        path}, this.DeletePageInfoOperationCompleted, userState);
        }
        
        private void OnDeletePageInfoOperationCompleted(object arg) {
            if ((this.DeletePageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePageInfoCompleted(this, new DeletePageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageInfoUserAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPageInfoUserAccess(string UserID, string lang) {
            object[] results = this.Invoke("GetPageInfoUserAccess", new object[] {
                        UserID,
                        lang});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageInfoUserAccessAsync(string UserID, string lang) {
            this.GetPageInfoUserAccessAsync(UserID, lang, null);
        }
        
        /// <remarks/>
        public void GetPageInfoUserAccessAsync(string UserID, string lang, object userState) {
            if ((this.GetPageInfoUserAccessOperationCompleted == null)) {
                this.GetPageInfoUserAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageInfoUserAccessOperationCompleted);
            }
            this.InvokeAsync("GetPageInfoUserAccess", new object[] {
                        UserID,
                        lang}, this.GetPageInfoUserAccessOperationCompleted, userState);
        }
        
        private void OnGetPageInfoUserAccessOperationCompleted(object arg) {
            if ((this.GetPageInfoUserAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageInfoUserAccessCompleted(this, new GetPageInfoUserAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPageViews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetPageViews(string PageID, System.DateTime ViewDate) {
            object[] results = this.Invoke("SetPageViews", new object[] {
                        PageID,
                        ViewDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetPageViewsAsync(string PageID, System.DateTime ViewDate) {
            this.SetPageViewsAsync(PageID, ViewDate, null);
        }
        
        /// <remarks/>
        public void SetPageViewsAsync(string PageID, System.DateTime ViewDate, object userState) {
            if ((this.SetPageViewsOperationCompleted == null)) {
                this.SetPageViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPageViewsOperationCompleted);
            }
            this.InvokeAsync("SetPageViews", new object[] {
                        PageID,
                        ViewDate}, this.SetPageViewsOperationCompleted, userState);
        }
        
        private void OnSetPageViewsOperationCompleted(object arg) {
            if ((this.SetPageViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPageViewsCompleted(this, new SetPageViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageViews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPageViews(string PageID) {
            object[] results = this.Invoke("GetPageViews", new object[] {
                        PageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageViewsAsync(string PageID) {
            this.GetPageViewsAsync(PageID, null);
        }
        
        /// <remarks/>
        public void GetPageViewsAsync(string PageID, object userState) {
            if ((this.GetPageViewsOperationCompleted == null)) {
                this.GetPageViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageViewsOperationCompleted);
            }
            this.InvokeAsync("GetPageViews", new object[] {
                        PageID}, this.GetPageViewsOperationCompleted, userState);
        }
        
        private void OnGetPageViewsOperationCompleted(object arg) {
            if ((this.GetPageViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageViewsCompleted(this, new GetPageViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageViewsByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPageViewsByDate(string PageID, System.DateTime ViewDate) {
            object[] results = this.Invoke("GetPageViewsByDate", new object[] {
                        PageID,
                        ViewDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageViewsByDateAsync(string PageID, System.DateTime ViewDate) {
            this.GetPageViewsByDateAsync(PageID, ViewDate, null);
        }
        
        /// <remarks/>
        public void GetPageViewsByDateAsync(string PageID, System.DateTime ViewDate, object userState) {
            if ((this.GetPageViewsByDateOperationCompleted == null)) {
                this.GetPageViewsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageViewsByDateOperationCompleted);
            }
            this.InvokeAsync("GetPageViewsByDate", new object[] {
                        PageID,
                        ViewDate}, this.GetPageViewsByDateOperationCompleted, userState);
        }
        
        private void OnGetPageViewsByDateOperationCompleted(object arg) {
            if ((this.GetPageViewsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageViewsByDateCompleted(this, new GetPageViewsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsSEOAdminAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSEOAdminAccess(string ID, string Lang) {
            object[] results = this.Invoke("IsSEOAdminAccess", new object[] {
                        ID,
                        Lang});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSEOAdminAccessAsync(string ID, string Lang) {
            this.IsSEOAdminAccessAsync(ID, Lang, null);
        }
        
        /// <remarks/>
        public void IsSEOAdminAccessAsync(string ID, string Lang, object userState) {
            if ((this.IsSEOAdminAccessOperationCompleted == null)) {
                this.IsSEOAdminAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSEOAdminAccessOperationCompleted);
            }
            this.InvokeAsync("IsSEOAdminAccess", new object[] {
                        ID,
                        Lang}, this.IsSEOAdminAccessOperationCompleted, userState);
        }
        
        private void OnIsSEOAdminAccessOperationCompleted(object arg) {
            if ((this.IsSEOAdminAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSEOAdminAccessCompleted(this, new IsSEOAdminAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkUser(string UserName, string Password, string Domain) {
            object[] results = this.Invoke("checkUser", new object[] {
                        UserName,
                        Password,
                        Domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkUserAsync(string UserName, string Password, string Domain) {
            this.checkUserAsync(UserName, Password, Domain, null);
        }
        
        /// <remarks/>
        public void checkUserAsync(string UserName, string Password, string Domain, object userState) {
            if ((this.checkUserOperationCompleted == null)) {
                this.checkUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserOperationCompleted);
            }
            this.InvokeAsync("checkUser", new object[] {
                        UserName,
                        Password,
                        Domain}, this.checkUserOperationCompleted, userState);
        }
        
        private void OncheckUserOperationCompleted(object arg) {
            if ((this.checkUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserCompleted(this, new checkUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartnerLogoByAccountRowID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPartnerLogoByAccountRowID(string AccountRowID) {
            object[] results = this.Invoke("GetPartnerLogoByAccountRowID", new object[] {
                        AccountRowID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartnerLogoByAccountRowIDAsync(string AccountRowID) {
            this.GetPartnerLogoByAccountRowIDAsync(AccountRowID, null);
        }
        
        /// <remarks/>
        public void GetPartnerLogoByAccountRowIDAsync(string AccountRowID, object userState) {
            if ((this.GetPartnerLogoByAccountRowIDOperationCompleted == null)) {
                this.GetPartnerLogoByAccountRowIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartnerLogoByAccountRowIDOperationCompleted);
            }
            this.InvokeAsync("GetPartnerLogoByAccountRowID", new object[] {
                        AccountRowID}, this.GetPartnerLogoByAccountRowIDOperationCompleted, userState);
        }
        
        private void OnGetPartnerLogoByAccountRowIDOperationCompleted(object arg) {
            if ((this.GetPartnerLogoByAccountRowIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartnerLogoByAccountRowIDCompleted(this, new GetPartnerLogoByAccountRowIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Comment_GetByRecord_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Comment_GetByRecord_ID(string RECORD_ID) {
            object[] results = this.Invoke("Comment_GetByRecord_ID", new object[] {
                        RECORD_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Comment_GetByRecord_IDAsync(string RECORD_ID) {
            this.Comment_GetByRecord_IDAsync(RECORD_ID, null);
        }
        
        /// <remarks/>
        public void Comment_GetByRecord_IDAsync(string RECORD_ID, object userState) {
            if ((this.Comment_GetByRecord_IDOperationCompleted == null)) {
                this.Comment_GetByRecord_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComment_GetByRecord_IDOperationCompleted);
            }
            this.InvokeAsync("Comment_GetByRecord_ID", new object[] {
                        RECORD_ID}, this.Comment_GetByRecord_IDOperationCompleted, userState);
        }
        
        private void OnComment_GetByRecord_IDOperationCompleted(object arg) {
            if ((this.Comment_GetByRecord_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Comment_GetByRecord_IDCompleted(this, new Comment_GetByRecord_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Comment_GetReplyBySID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Comment_GetReplyBySID(int intSID) {
            object[] results = this.Invoke("Comment_GetReplyBySID", new object[] {
                        intSID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Comment_GetReplyBySIDAsync(int intSID) {
            this.Comment_GetReplyBySIDAsync(intSID, null);
        }
        
        /// <remarks/>
        public void Comment_GetReplyBySIDAsync(int intSID, object userState) {
            if ((this.Comment_GetReplyBySIDOperationCompleted == null)) {
                this.Comment_GetReplyBySIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComment_GetReplyBySIDOperationCompleted);
            }
            this.InvokeAsync("Comment_GetReplyBySID", new object[] {
                        intSID}, this.Comment_GetReplyBySIDOperationCompleted, userState);
        }
        
        private void OnComment_GetReplyBySIDOperationCompleted(object arg) {
            if ((this.Comment_GetReplyBySIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Comment_GetReplyBySIDCompleted(this, new Comment_GetReplyBySIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Comment_AddByRecord_IDandUser_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Comment_AddByRecord_IDandUser_ID(string strRECORD_ID, int intSID, string strUser_ID, string strComments, string strCountry) {
            object[] results = this.Invoke("Comment_AddByRecord_IDandUser_ID", new object[] {
                        strRECORD_ID,
                        intSID,
                        strUser_ID,
                        strComments,
                        strCountry});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Comment_AddByRecord_IDandUser_IDAsync(string strRECORD_ID, int intSID, string strUser_ID, string strComments, string strCountry) {
            this.Comment_AddByRecord_IDandUser_IDAsync(strRECORD_ID, intSID, strUser_ID, strComments, strCountry, null);
        }
        
        /// <remarks/>
        public void Comment_AddByRecord_IDandUser_IDAsync(string strRECORD_ID, int intSID, string strUser_ID, string strComments, string strCountry, object userState) {
            if ((this.Comment_AddByRecord_IDandUser_IDOperationCompleted == null)) {
                this.Comment_AddByRecord_IDandUser_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComment_AddByRecord_IDandUser_IDOperationCompleted);
            }
            this.InvokeAsync("Comment_AddByRecord_IDandUser_ID", new object[] {
                        strRECORD_ID,
                        intSID,
                        strUser_ID,
                        strComments,
                        strCountry}, this.Comment_AddByRecord_IDandUser_IDOperationCompleted, userState);
        }
        
        private void OnComment_AddByRecord_IDandUser_IDOperationCompleted(object arg) {
            if ((this.Comment_AddByRecord_IDandUser_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Comment_AddByRecord_IDandUser_IDCompleted(this, new Comment_AddByRecord_IDandUser_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Comment_DeleteBySID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Comment_DeleteBySID(int intSID) {
            object[] results = this.Invoke("Comment_DeleteBySID", new object[] {
                        intSID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Comment_DeleteBySIDAsync(int intSID) {
            this.Comment_DeleteBySIDAsync(intSID, null);
        }
        
        /// <remarks/>
        public void Comment_DeleteBySIDAsync(int intSID, object userState) {
            if ((this.Comment_DeleteBySIDOperationCompleted == null)) {
                this.Comment_DeleteBySIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComment_DeleteBySIDOperationCompleted);
            }
            this.InvokeAsync("Comment_DeleteBySID", new object[] {
                        intSID}, this.Comment_DeleteBySIDOperationCompleted, userState);
        }
        
        private void OnComment_DeleteBySIDOperationCompleted(object arg) {
            if ((this.Comment_DeleteBySIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Comment_DeleteBySIDCompleted(this, new Comment_DeleteBySIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_eCatalog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable get_eCatalog(ref string strRbu, string strType, string strKey) {
            object[] results = this.Invoke("get_eCatalog", new object[] {
                        strRbu,
                        strType,
                        strKey});
            strRbu = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void get_eCatalogAsync(string strRbu, string strType, string strKey) {
            this.get_eCatalogAsync(strRbu, strType, strKey, null);
        }
        
        /// <remarks/>
        public void get_eCatalogAsync(string strRbu, string strType, string strKey, object userState) {
            if ((this.get_eCatalogOperationCompleted == null)) {
                this.get_eCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_eCatalogOperationCompleted);
            }
            this.InvokeAsync("get_eCatalog", new object[] {
                        strRbu,
                        strType,
                        strKey}, this.get_eCatalogOperationCompleted, userState);
        }
        
        private void Onget_eCatalogOperationCompleted(object arg) {
            if ((this.get_eCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_eCatalogCompleted(this, new get_eCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendSRNotifyEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendSRNotifyEmail(string email, string rowID) {
            object[] results = this.Invoke("sendSRNotifyEmail", new object[] {
                        email,
                        rowID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendSRNotifyEmailAsync(string email, string rowID) {
            this.sendSRNotifyEmailAsync(email, rowID, null);
        }
        
        /// <remarks/>
        public void sendSRNotifyEmailAsync(string email, string rowID, object userState) {
            if ((this.sendSRNotifyEmailOperationCompleted == null)) {
                this.sendSRNotifyEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSRNotifyEmailOperationCompleted);
            }
            this.InvokeAsync("sendSRNotifyEmail", new object[] {
                        email,
                        rowID}, this.sendSRNotifyEmailOperationCompleted, userState);
        }
        
        private void OnsendSRNotifyEmailOperationCompleted(object arg) {
            if ((this.sendSRNotifyEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSRNotifyEmailCompleted(this, new sendSRNotifyEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePurgeRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreatePurgeRequest(ref string strUrl, string EmailTo, string EmailCc, string EmailBcc) {
            object[] results = this.Invoke("CreatePurgeRequest", new object[] {
                        strUrl,
                        EmailTo,
                        EmailCc,
                        EmailBcc});
            strUrl = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurgeRequestAsync(string strUrl, string EmailTo, string EmailCc, string EmailBcc) {
            this.CreatePurgeRequestAsync(strUrl, EmailTo, EmailCc, EmailBcc, null);
        }
        
        /// <remarks/>
        public void CreatePurgeRequestAsync(string strUrl, string EmailTo, string EmailCc, string EmailBcc, object userState) {
            if ((this.CreatePurgeRequestOperationCompleted == null)) {
                this.CreatePurgeRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurgeRequestOperationCompleted);
            }
            this.InvokeAsync("CreatePurgeRequest", new object[] {
                        strUrl,
                        EmailTo,
                        EmailCc,
                        EmailBcc}, this.CreatePurgeRequestOperationCompleted, userState);
        }
        
        private void OnCreatePurgeRequestOperationCompleted(object arg) {
            if ((this.CreatePurgeRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurgeRequestCompleted(this, new CreatePurgeRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddRatingCompletedEventHandler(object sender, AddRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddRating2CompletedEventHandler(object sender, AddRating2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRating2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRating2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAverageRateCompletedEventHandler(object sender, GetAverageRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAverageRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAverageRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRatingCompletedEventHandler(object sender, GetRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRating2CompletedEventHandler(object sender, GetRating2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRating2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRating2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPartnerInfoCompletedEventHandler(object sender, getPartnerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPartnerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPartnerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRBUInfoByCountryBUCompletedEventHandler(object sender, getRBUInfoByCountryBUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRBUInfoByCountryBUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRBUInfoByCountryBUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getChannelPartnerListCompletedEventHandler(object sender, getChannelPartnerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChannelPartnerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChannelPartnerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPartnerIDCompletedEventHandler(object sender, getPartnerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPartnerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPartnerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddBannerLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddProductLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddProductTypeLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddCMSViewCompletedEventHandler(object sender, AddCMSViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCMSViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCMSViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCountCompletedEventHandler(object sender, GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddPageInfoCompletedEventHandler(object sender, AddPageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePageInfoCompletedEventHandler(object sender, UpdatePageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddPageInfoWithUserCompletedEventHandler(object sender, AddPageInfoWithUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPageInfoWithUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPageInfoWithUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePageInfoWithUserCompletedEventHandler(object sender, UpdatePageInfoWithUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePageInfoWithUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePageInfoWithUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeletePageInfoCompletedEventHandler(object sender, DeletePageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPageInfoUserAccessCompletedEventHandler(object sender, GetPageInfoUserAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageInfoUserAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageInfoUserAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetPageViewsCompletedEventHandler(object sender, SetPageViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPageViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPageViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPageViewsCompletedEventHandler(object sender, GetPageViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPageViewsByDateCompletedEventHandler(object sender, GetPageViewsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageViewsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageViewsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsSEOAdminAccessCompletedEventHandler(object sender, IsSEOAdminAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSEOAdminAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSEOAdminAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void checkUserCompletedEventHandler(object sender, checkUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPartnerLogoByAccountRowIDCompletedEventHandler(object sender, GetPartnerLogoByAccountRowIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartnerLogoByAccountRowIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartnerLogoByAccountRowIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Comment_GetByRecord_IDCompletedEventHandler(object sender, Comment_GetByRecord_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Comment_GetByRecord_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Comment_GetByRecord_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Comment_GetReplyBySIDCompletedEventHandler(object sender, Comment_GetReplyBySIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Comment_GetReplyBySIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Comment_GetReplyBySIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Comment_AddByRecord_IDandUser_IDCompletedEventHandler(object sender, Comment_AddByRecord_IDandUser_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Comment_AddByRecord_IDandUser_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Comment_AddByRecord_IDandUser_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Comment_DeleteBySIDCompletedEventHandler(object sender, Comment_DeleteBySIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Comment_DeleteBySIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Comment_DeleteBySIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void get_eCatalogCompletedEventHandler(object sender, get_eCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_eCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_eCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strRbu {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendSRNotifyEmailCompletedEventHandler(object sender, sendSRNotifyEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSRNotifyEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSRNotifyEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreatePurgeRequestCompletedEventHandler(object sender, CreatePurgeRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurgeRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurgeRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strUrl {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591