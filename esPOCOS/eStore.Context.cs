//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.EntityClient;

namespace eStore.POCOS
{
    public partial class eStore3Entities6 : ObjectContext
    {
        public const string ConnectionString = "name=eStore3Entities6";
        public const string ContainerName = "eStore3Entities6";
    
        #region Constructors
    
        public eStore3Entities6()
            : base(ConnectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        public eStore3Entities6(string connectionString)
            : base(connectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        public eStore3Entities6(EntityConnection connection)
            : base(connection, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Address> Addresses
        {
            get { return _addresses  ?? (_addresses = CreateObjectSet<Address>("Addresses")); }
        }
        private ObjectSet<Address> _addresses;
    
        public ObjectSet<CountryState> CountryStates
        {
            get { return _countryStates  ?? (_countryStates = CreateObjectSet<CountryState>("CountryStates")); }
        }
        private ObjectSet<CountryState> _countryStates;
    
        public ObjectSet<DMFTerrority> DMFTerrorities
        {
            get { return _dMFTerrorities  ?? (_dMFTerrorities = CreateObjectSet<DMFTerrority>("DMFTerrorities")); }
        }
        private ObjectSet<DMFTerrority> _dMFTerrorities;
    
        public ObjectSet<ExtendedWaranty> ExtendedWaranties
        {
            get { return _extendedWaranties  ?? (_extendedWaranties = CreateObjectSet<ExtendedWaranty>("ExtendedWaranties")); }
        }
        private ObjectSet<ExtendedWaranty> _extendedWaranties;
    
        public ObjectSet<Products_inventory> Products_inventory
        {
            get { return _products_inventory  ?? (_products_inventory = CreateObjectSet<Products_inventory>("Products_inventory")); }
        }
        private ObjectSet<Products_inventory> _products_inventory;
    
        public ObjectSet<ProductStatu> ProductStatus
        {
            get { return _productStatus  ?? (_productStatus = CreateObjectSet<ProductStatu>("ProductStatus")); }
        }
        private ObjectSet<ProductStatu> _productStatus;
    
        public ObjectSet<RateServiceMessageLang> RateServiceMessageLangs
        {
            get { return _rateServiceMessageLangs  ?? (_rateServiceMessageLangs = CreateObjectSet<RateServiceMessageLang>("RateServiceMessageLangs")); }
        }
        private ObjectSet<RateServiceMessageLang> _rateServiceMessageLangs;
    
        public ObjectSet<RateServiceName> RateServiceNames
        {
            get { return _rateServiceNames  ?? (_rateServiceNames = CreateObjectSet<RateServiceName>("RateServiceNames")); }
        }
        private ObjectSet<RateServiceName> _rateServiceNames;
    
        public ObjectSet<ShippingCarierType> ShippingCarierTypes
        {
            get { return _shippingCarierTypes  ?? (_shippingCarierTypes = CreateObjectSet<ShippingCarierType>("ShippingCarierTypes")); }
        }
        private ObjectSet<ShippingCarierType> _shippingCarierTypes;
    
        public ObjectSet<Store> Stores
        {
            get { return _stores  ?? (_stores = CreateObjectSet<Store>("Stores")); }
        }
        private ObjectSet<Store> _stores;
    
        public ObjectSet<StoreConfig> StoreConfigs
        {
            get { return _storeConfigs  ?? (_storeConfigs = CreateObjectSet<StoreConfig>("StoreConfigs")); }
        }
        private ObjectSet<StoreConfig> _storeConfigs;
    
        public ObjectSet<StoreConfigKey> StoreConfigKeys
        {
            get { return _storeConfigKeys  ?? (_storeConfigKeys = CreateObjectSet<StoreConfigKey>("StoreConfigKeys")); }
        }
        private ObjectSet<StoreConfigKey> _storeConfigKeys;
    
        public ObjectSet<StoreSolution> StoreSolutions
        {
            get { return _storeSolutions  ?? (_storeSolutions = CreateObjectSet<StoreSolution>("StoreSolutions")); }
        }
        private ObjectSet<StoreSolution> _storeSolutions;
    
        public ObjectSet<User> Users
        {
            get { return _users  ?? (_users = CreateObjectSet<User>("Users")); }
        }
        private ObjectSet<User> _users;
    
        public ObjectSet<Vendor> Vendors
        {
            get { return _vendors  ?? (_vendors = CreateObjectSet<Vendor>("Vendors")); }
        }
        private ObjectSet<Vendor> _vendors;
    
        public ObjectSet<Part> Parts
        {
            get { return _parts  ?? (_parts = CreateObjectSet<Part>("Parts")); }
        }
        private ObjectSet<Part> _parts;
    
        public ObjectSet<Contact> Contacts
        {
            get { return _contacts  ?? (_contacts = CreateObjectSet<Contact>("Contacts")); }
        }
        private ObjectSet<Contact> _contacts;
    
        public ObjectSet<BTOSConfig> BTOSConfigs
        {
            get { return _bTOSConfigs  ?? (_bTOSConfigs = CreateObjectSet<BTOSConfig>("BTOSConfigs")); }
        }
        private ObjectSet<BTOSConfig> _bTOSConfigs;
    
        public ObjectSet<BTOSystem> BTOSystems
        {
            get { return _bTOSystems  ?? (_bTOSystems = CreateObjectSet<BTOSystem>("BTOSystems")); }
        }
        private ObjectSet<BTOSystem> _bTOSystems;
    
        public ObjectSet<PackagingBox> PackagingBoxes
        {
            get { return _packagingBoxes  ?? (_packagingBoxes = CreateObjectSet<PackagingBox>("PackagingBoxes")); }
        }
        private ObjectSet<PackagingBox> _packagingBoxes;
    
        public ObjectSet<PackingBoxDetail> PackingBoxDetails
        {
            get { return _packingBoxDetails  ?? (_packingBoxDetails = CreateObjectSet<PackingBoxDetail>("PackingBoxDetails")); }
        }
        private ObjectSet<PackingBoxDetail> _packingBoxDetails;
    
        public ObjectSet<PackingList> PackingLists
        {
            get { return _packingLists  ?? (_packingLists = CreateObjectSet<PackingList>("PackingLists")); }
        }
        private ObjectSet<PackingList> _packingLists;
    
        public ObjectSet<StoreFreightRate> StoreFreightRates
        {
            get { return _storeFreightRates  ?? (_storeFreightRates = CreateObjectSet<StoreFreightRate>("StoreFreightRates")); }
        }
        private ObjectSet<StoreFreightRate> _storeFreightRates;
    
        public ObjectSet<StateZip> StateZips
        {
            get { return _stateZips  ?? (_stateZips = CreateObjectSet<StateZip>("StateZips")); }
        }
        private ObjectSet<StateZip> _stateZips;
    
        public ObjectSet<ProductResource> ProductResources
        {
            get { return _productResources  ?? (_productResources = CreateObjectSet<ProductResource>("ProductResources")); }
        }
        private ObjectSet<ProductResource> _productResources;
    
        public ObjectSet<CartItem> CartItems
        {
            get { return _cartItems  ?? (_cartItems = CreateObjectSet<CartItem>("CartItems")); }
        }
        private ObjectSet<CartItem> _cartItems;
    
        public ObjectSet<RelatedProduct> RelatedProducts
        {
            get { return _relatedProducts  ?? (_relatedProducts = CreateObjectSet<RelatedProduct>("RelatedProducts")); }
        }
        private ObjectSet<RelatedProduct> _relatedProducts;
    
        public ObjectSet<StoreParameter> StoreParameters
        {
            get { return _storeParameters  ?? (_storeParameters = CreateObjectSet<StoreParameter>("StoreParameters")); }
        }
        private ObjectSet<StoreParameter> _storeParameters;
    
        public ObjectSet<CTOSBOM> CTOSBOMs
        {
            get { return _cTOSBOMs  ?? (_cTOSBOMs = CreateObjectSet<CTOSBOM>("CTOSBOMs")); }
        }
        private ObjectSet<CTOSBOM> _cTOSBOMs;
    
        public ObjectSet<Cart> Carts
        {
            get { return _carts  ?? (_carts = CreateObjectSet<Cart>("Carts")); }
        }
        private ObjectSet<Cart> _carts;
    
        public ObjectSet<CartContact> CartContacts
        {
            get { return _cartContacts  ?? (_cartContacts = CreateObjectSet<CartContact>("CartContacts")); }
        }
        private ObjectSet<CartContact> _cartContacts;
    
        public ObjectSet<SAPProduct> SAPProducts
        {
            get { return _sAPProducts  ?? (_sAPProducts = CreateObjectSet<SAPProduct>("SAPProducts")); }
        }
        private ObjectSet<SAPProduct> _sAPProducts;
    
        public ObjectSet<SAPCompany> SAPCompanies
        {
            get { return _sAPCompanies  ?? (_sAPCompanies = CreateObjectSet<SAPCompany>("SAPCompanies")); }
        }
        private ObjectSet<SAPCompany> _sAPCompanies;
    
        public ObjectSet<StorePayment> StorePayments
        {
            get { return _storePayments  ?? (_storePayments = CreateObjectSet<StorePayment>("StorePayments")); }
        }
        private ObjectSet<StorePayment> _storePayments;
    
        public ObjectSet<Country> Countries
        {
            get { return _countries  ?? (_countries = CreateObjectSet<Country>("Countries")); }
        }
        private ObjectSet<Country> _countries;
    
        public ObjectSet<TaxConfig> TaxConfigs
        {
            get { return _taxConfigs  ?? (_taxConfigs = CreateObjectSet<TaxConfig>("TaxConfigs")); }
        }
        private ObjectSet<TaxConfig> _taxConfigs;
    
        public ObjectSet<Quotation> Quotations
        {
            get { return _quotations  ?? (_quotations = CreateObjectSet<Quotation>("Quotations")); }
        }
        private ObjectSet<Quotation> _quotations;
    
        public ObjectSet<Order> Orders
        {
            get { return _orders  ?? (_orders = CreateObjectSet<Order>("Orders")); }
        }
        private ObjectSet<Order> _orders;
    
        public ObjectSet<Menu> Menus
        {
            get { return _menus  ?? (_menus = CreateObjectSet<Menu>("Menus")); }
        }
        private ObjectSet<Menu> _menus;
    
        public ObjectSet<ProductCategory> ProductCategories
        {
            get { return _productCategories  ?? (_productCategories = CreateObjectSet<ProductCategory>("ProductCategories")); }
        }
        private ObjectSet<ProductCategory> _productCategories;
    
        public ObjectSet<RuleSetDetail> RuleSetDetails
        {
            get { return _ruleSetDetails  ?? (_ruleSetDetails = CreateObjectSet<RuleSetDetail>("RuleSetDetails")); }
        }
        private ObjectSet<RuleSetDetail> _ruleSetDetails;
    
        public ObjectSet<Payment> Payments
        {
            get { return _payments  ?? (_payments = CreateObjectSet<Payment>("Payments")); }
        }
        private ObjectSet<Payment> _payments;
    
        public ObjectSet<StoreAddress> StoreAddresses
        {
            get { return _storeAddresses  ?? (_storeAddresses = CreateObjectSet<StoreAddress>("StoreAddresses")); }
        }
        private ObjectSet<StoreAddress> _storeAddresses;
    
        public ObjectSet<SAPCompanySalesarea> SAPCompanySalesareas
        {
            get { return _sAPCompanySalesareas  ?? (_sAPCompanySalesareas = CreateObjectSet<SAPCompanySalesarea>("SAPCompanySalesareas")); }
        }
        private ObjectSet<SAPCompanySalesarea> _sAPCompanySalesareas;
    
        public ObjectSet<ProductSpec> ProductSpecs
        {
            get { return _productSpecs  ?? (_productSpecs = CreateObjectSet<ProductSpec>("ProductSpecs")); }
        }
        private ObjectSet<ProductSpec> _productSpecs;
    
        public ObjectSet<SpecAttributelang> SpecAttributelangs
        {
            get { return _specAttributelangs  ?? (_specAttributelangs = CreateObjectSet<SpecAttributelang>("SpecAttributelangs")); }
        }
        private ObjectSet<SpecAttributelang> _specAttributelangs;
    
        public ObjectSet<SolutionStoreItem> SolutionStoreItems
        {
            get { return _solutionStoreItems  ?? (_solutionStoreItems = CreateObjectSet<SolutionStoreItem>("SolutionStoreItems")); }
        }
        private ObjectSet<SolutionStoreItem> _solutionStoreItems;
    
        public ObjectSet<SolutionStoreTab> SolutionStoreTabs
        {
            get { return _solutionStoreTabs  ?? (_solutionStoreTabs = CreateObjectSet<SolutionStoreTab>("SolutionStoreTabs")); }
        }
        private ObjectSet<SolutionStoreTab> _solutionStoreTabs;
    
        public ObjectSet<ReplaceProduct> ReplaceProducts
        {
            get { return _replaceProducts  ?? (_replaceProducts = CreateObjectSet<ReplaceProduct>("ReplaceProducts")); }
        }
        private ObjectSet<ReplaceProduct> _replaceProducts;
    
        public ObjectSet<StoreErrorCode> StoreErrorCodes
        {
            get { return _storeErrorCodes  ?? (_storeErrorCodes = CreateObjectSet<StoreErrorCode>("StoreErrorCodes")); }
        }
        private ObjectSet<StoreErrorCode> _storeErrorCodes;
    
        public ObjectSet<Translation> Translations
        {
            get { return _translations  ?? (_translations = CreateObjectSet<Translation>("Translations")); }
        }
        private ObjectSet<Translation> _translations;
    
        public ObjectSet<BTOSConfigDetail> BTOSConfigDetails
        {
            get { return _bTOSConfigDetails  ?? (_bTOSConfigDetails = CreateObjectSet<BTOSConfigDetail>("BTOSConfigDetails")); }
        }
        private ObjectSet<BTOSConfigDetail> _bTOSConfigDetails;
    
        public ObjectSet<ProductCategroyMapping> ProductCategroyMappings
        {
            get { return _productCategroyMappings  ?? (_productCategroyMappings = CreateObjectSet<ProductCategroyMapping>("ProductCategroyMappings")); }
        }
        private ObjectSet<ProductCategroyMapping> _productCategroyMappings;
    
        public ObjectSet<vproductcategory> vproductcategories
        {
            get { return _vproductcategories  ?? (_vproductcategories = CreateObjectSet<vproductcategory>("vproductcategories")); }
        }
        private ObjectSet<vproductcategory> _vproductcategories;
    
        public ObjectSet<vRootCategory> vRootCategories
        {
            get { return _vRootCategories  ?? (_vRootCategories = CreateObjectSet<vRootCategory>("vRootCategories")); }
        }
        private ObjectSet<vRootCategory> _vRootCategories;
    
        public ObjectSet<vALLCategory> vALLCategories
        {
            get { return _vALLCategories  ?? (_vALLCategories = CreateObjectSet<vALLCategory>("vALLCategories")); }
        }
        private ObjectSet<vALLCategory> _vALLCategories;
    
        public ObjectSet<SpecAttributeValuelang> SpecAttributeValuelangs
        {
            get { return _specAttributeValuelangs  ?? (_specAttributeValuelangs = CreateObjectSet<SpecAttributeValuelang>("SpecAttributeValuelangs")); }
        }
        private ObjectSet<SpecAttributeValuelang> _specAttributeValuelangs;
    
        public ObjectSet<UserShortCut> UserShortCuts
        {
            get { return _userShortCuts  ?? (_userShortCuts = CreateObjectSet<UserShortCut>("UserShortCuts")); }
        }
        private ObjectSet<UserShortCut> _userShortCuts;
    
        public ObjectSet<ShippingCarier> ShippingCariers
        {
            get { return _shippingCariers  ?? (_shippingCariers = CreateObjectSet<ShippingCarier>("ShippingCariers")); }
        }
        private ObjectSet<ShippingCarier> _shippingCariers;
    
        public ObjectSet<StoreCarier> StoreCariers
        {
            get { return _storeCariers  ?? (_storeCariers = CreateObjectSet<StoreCarier>("StoreCariers")); }
        }
        private ObjectSet<StoreCarier> _storeCariers;
    
        public ObjectSet<ProductBox> ProductBoxes
        {
            get { return _productBoxes  ?? (_productBoxes = CreateObjectSet<ProductBox>("ProductBoxes")); }
        }
        private ObjectSet<ProductBox> _productBoxes;
    
        public ObjectSet<Box> Boxes
        {
            get { return _boxes  ?? (_boxes = CreateObjectSet<Box>("Boxes")); }
        }
        private ObjectSet<Box> _boxes;
    
        public ObjectSet<OMMenu> OMMenus
        {
            get { return _oMMenus  ?? (_oMMenus = CreateObjectSet<OMMenu>("OMMenus")); }
        }
        private ObjectSet<OMMenu> _oMMenus;
    
        public ObjectSet<VRule> VRules
        {
            get { return _vRules  ?? (_vRules = CreateObjectSet<VRule>("VRules")); }
        }
        private ObjectSet<VRule> _vRules;
    
        public ObjectSet<DHLRate> DHLRates
        {
            get { return _dHLRates  ?? (_dHLRates = CreateObjectSet<DHLRate>("DHLRates")); }
        }
        private ObjectSet<DHLRate> _dHLRates;
    
        public ObjectSet<ViewLog> ViewLogs
        {
            get { return _viewLogs  ?? (_viewLogs = CreateObjectSet<ViewLog>("ViewLogs")); }
        }
        private ObjectSet<ViewLog> _viewLogs;
    
        public ObjectSet<PeripheralCatagory> PeripheralCatagories
        {
            get { return _peripheralCatagories  ?? (_peripheralCatagories = CreateObjectSet<PeripheralCatagory>("PeripheralCatagories")); }
        }
        private ObjectSet<PeripheralCatagory> _peripheralCatagories;
    
        public ObjectSet<PeripheralCompatible> PeripheralCompatibles
        {
            get { return _peripheralCompatibles  ?? (_peripheralCompatibles = CreateObjectSet<PeripheralCompatible>("PeripheralCompatibles")); }
        }
        private ObjectSet<PeripheralCompatible> _peripheralCompatibles;
    
        public ObjectSet<Advertisement> Advertisements
        {
            get { return _advertisements  ?? (_advertisements = CreateObjectSet<Advertisement>("Advertisements")); }
        }
        private ObjectSet<Advertisement> _advertisements;
    
        public ObjectSet<PeripheralsubCatagory> PeripheralsubCatagories
        {
            get { return _peripheralsubCatagories  ?? (_peripheralsubCatagories = CreateObjectSet<PeripheralsubCatagory>("PeripheralsubCatagories")); }
        }
        private ObjectSet<PeripheralsubCatagory> _peripheralsubCatagories;
    
        public ObjectSet<SalesPerson> SalesPersons
        {
            get { return _salesPersons  ?? (_salesPersons = CreateObjectSet<SalesPerson>("SalesPersons")); }
        }
        private ObjectSet<SalesPerson> _salesPersons;
    
        public ObjectSet<DMF> DMFs
        {
            get { return _dMFs  ?? (_dMFs = CreateObjectSet<DMF>("DMFs")); }
        }
        private ObjectSet<DMF> _dMFs;
    
        public ObjectSet<MenuAdvertisement> MenuAdvertisements
        {
            get { return _menuAdvertisements  ?? (_menuAdvertisements = CreateObjectSet<MenuAdvertisement>("MenuAdvertisements")); }
        }
        private ObjectSet<MenuAdvertisement> _menuAdvertisements;
    
        public ObjectSet<OrderSyncParameter> OrderSyncParameters
        {
            get { return _orderSyncParameters  ?? (_orderSyncParameters = CreateObjectSet<OrderSyncParameter>("OrderSyncParameters")); }
        }
        private ObjectSet<OrderSyncParameter> _orderSyncParameters;
    
        public ObjectSet<RuleSet> RuleSets
        {
            get { return _ruleSets  ?? (_ruleSets = CreateObjectSet<RuleSet>("RuleSets")); }
        }
        private ObjectSet<RuleSet> _ruleSets;
    
        public ObjectSet<SpecAttribute> SpecAttributes
        {
            get { return _specAttributes  ?? (_specAttributes = CreateObjectSet<SpecAttribute>("SpecAttributes")); }
        }
        private ObjectSet<SpecAttribute> _specAttributes;
    
        public ObjectSet<SpecAttributeCat> SpecAttributeCats
        {
            get { return _specAttributeCats  ?? (_specAttributeCats = CreateObjectSet<SpecAttributeCat>("SpecAttributeCats")); }
        }
        private ObjectSet<SpecAttributeCat> _specAttributeCats;
    
        public ObjectSet<SpecAttributeCatlang> SpecAttributeCatlangs
        {
            get { return _specAttributeCatlangs  ?? (_specAttributeCatlangs = CreateObjectSet<SpecAttributeCatlang>("SpecAttributeCatlangs")); }
        }
        private ObjectSet<SpecAttributeCatlang> _specAttributeCatlangs;
    
        public ObjectSet<SpecAttributeValue> SpecAttributeValues
        {
            get { return _specAttributeValues  ?? (_specAttributeValues = CreateObjectSet<SpecAttributeValue>("SpecAttributeValues")); }
        }
        private ObjectSet<SpecAttributeValue> _specAttributeValues;
    
        public ObjectSet<CTOSAttribute> CTOSAttributes
        {
            get { return _cTOSAttributes  ?? (_cTOSAttributes = CreateObjectSet<CTOSAttribute>("CTOSAttributes")); }
        }
        private ObjectSet<CTOSAttribute> _cTOSAttributes;
    
        public ObjectSet<CTOSAttributeValue> CTOSAttributeValues
        {
            get { return _cTOSAttributeValues  ?? (_cTOSAttributeValues = CreateObjectSet<CTOSAttributeValue>("CTOSAttributeValues")); }
        }
        private ObjectSet<CTOSAttributeValue> _cTOSAttributeValues;
    
        public ObjectSet<Holiday> Holidays
        {
            get { return _holidays  ?? (_holidays = CreateObjectSet<Holiday>("Holidays")); }
        }
        private ObjectSet<Holiday> _holidays;
    
        public ObjectSet<CampaignStrategy> CampaignStrategies
        {
            get { return _campaignStrategies  ?? (_campaignStrategies = CreateObjectSet<CampaignStrategy>("CampaignStrategies")); }
        }
        private ObjectSet<CampaignStrategy> _campaignStrategies;
    
        public ObjectSet<UserRequest> UserRequests
        {
            get { return _userRequests  ?? (_userRequests = CreateObjectSet<UserRequest>("UserRequests")); }
        }
        private ObjectSet<UserRequest> _userRequests;
    
        public ObjectSet<VBaseType> VBaseTypes
        {
            get { return _vBaseTypes  ?? (_vBaseTypes = CreateObjectSet<VBaseType>("VBaseTypes")); }
        }
        private ObjectSet<VBaseType> _vBaseTypes;
    
        public ObjectSet<AdminRole> AdminRoles
        {
            get { return _adminRoles  ?? (_adminRoles = CreateObjectSet<AdminRole>("AdminRoles")); }
        }
        private ObjectSet<AdminRole> _adminRoles;
    
        public ObjectSet<TrackingLog> TrackingLogs
        {
            get { return _trackingLogs  ?? (_trackingLogs = CreateObjectSet<TrackingLog>("TrackingLogs")); }
        }
        private ObjectSet<TrackingLog> _trackingLogs;
    
        public ObjectSet<AdminAuth> AdminAuths
        {
            get { return _adminAuths  ?? (_adminAuths = CreateObjectSet<AdminAuth>("AdminAuths")); }
        }
        private ObjectSet<AdminAuth> _adminAuths;
    
        public ObjectSet<CTOSSpecMask> CTOSSpecMasks
        {
            get { return _cTOSSpecMasks  ?? (_cTOSSpecMasks = CreateObjectSet<CTOSSpecMask>("CTOSSpecMasks")); }
        }
        private ObjectSet<CTOSSpecMask> _cTOSSpecMasks;
    
        public ObjectSet<OrderSyncedRecord> OrderSyncedRecords
        {
            get { return _orderSyncedRecords  ?? (_orderSyncedRecords = CreateObjectSet<OrderSyncedRecord>("OrderSyncedRecords")); }
        }
        private ObjectSet<OrderSyncedRecord> _orderSyncedRecords;
    
        public ObjectSet<ChangeLog> ChangeLogs
        {
            get { return _changeLogs  ?? (_changeLogs = CreateObjectSet<ChangeLog>("ChangeLogs")); }
        }
        private ObjectSet<ChangeLog> _changeLogs;
    
        public ObjectSet<CTOSComparision> CTOSComparisions
        {
            get { return _cTOSComparisions  ?? (_cTOSComparisions = CreateObjectSet<CTOSComparision>("CTOSComparisions")); }
        }
        private ObjectSet<CTOSComparision> _cTOSComparisions;
    
        public ObjectSet<VServiceRequest> VServiceRequests
        {
            get { return _vServiceRequests  ?? (_vServiceRequests = CreateObjectSet<VServiceRequest>("VServiceRequests")); }
        }
        private ObjectSet<VServiceRequest> _vServiceRequests;
    
        public ObjectSet<ServiceRequestTracking> ServiceRequestTrackings
        {
            get { return _serviceRequestTrackings  ?? (_serviceRequestTrackings = CreateObjectSet<ServiceRequestTracking>("ServiceRequestTrackings")); }
        }
        private ObjectSet<ServiceRequestTracking> _serviceRequestTrackings;
    
        public ObjectSet<WidgetPage> WidgetPages
        {
            get { return _widgetPages  ?? (_widgetPages = CreateObjectSet<WidgetPage>("WidgetPages")); }
        }
        private ObjectSet<WidgetPage> _widgetPages;
    
        public ObjectSet<PriceAdjustRule> PriceAdjustRules
        {
            get { return _priceAdjustRules  ?? (_priceAdjustRules = CreateObjectSet<PriceAdjustRule>("PriceAdjustRules")); }
        }
        private ObjectSet<PriceAdjustRule> _priceAdjustRules;
    
        public ObjectSet<OrderByPartnoExcludeRule> OrderByPartnoExcludeRules
        {
            get { return _orderByPartnoExcludeRules  ?? (_orderByPartnoExcludeRules = CreateObjectSet<OrderByPartnoExcludeRule>("OrderByPartnoExcludeRules")); }
        }
        private ObjectSet<OrderByPartnoExcludeRule> _orderByPartnoExcludeRules;
    
        public ObjectSet<CTOSAttributelang> CTOSAttributelangs
        {
            get { return _cTOSAttributelangs  ?? (_cTOSAttributelangs = CreateObjectSet<CTOSAttributelang>("CTOSAttributelangs")); }
        }
        private ObjectSet<CTOSAttributelang> _cTOSAttributelangs;
    
        public ObjectSet<OMCTOSSpec> OMCTOSSpecs
        {
            get { return _oMCTOSSpecs  ?? (_oMCTOSSpecs = CreateObjectSet<OMCTOSSpec>("OMCTOSSpecs")); }
        }
        private ObjectSet<OMCTOSSpec> _oMCTOSSpecs;
    
        public ObjectSet<UserActivityLog> UserActivityLogs
        {
            get { return _userActivityLogs  ?? (_userActivityLogs = CreateObjectSet<UserActivityLog>("UserActivityLogs")); }
        }
        private ObjectSet<UserActivityLog> _userActivityLogs;
    
        public ObjectSet<CTOSSpec> CTOSSpecs
        {
            get { return _cTOSSpecs  ?? (_cTOSSpecs = CreateObjectSet<CTOSSpec>("CTOSSpecs")); }
        }
        private ObjectSet<CTOSSpec> _cTOSSpecs;
    
        public ObjectSet<VSpecRule> VSpecRules
        {
            get { return _vSpecRules  ?? (_vSpecRules = CreateObjectSet<VSpecRule>("VSpecRules")); }
        }
        private ObjectSet<VSpecRule> _vSpecRules;
    
        public ObjectSet<VSpec> VSpecs
        {
            get { return _vSpecs  ?? (_vSpecs = CreateObjectSet<VSpec>("VSpecs")); }
        }
        private ObjectSet<VSpec> _vSpecs;
    
        public ObjectSet<ProductBoxRule> ProductBoxRules
        {
            get { return _productBoxRules  ?? (_productBoxRules = CreateObjectSet<ProductBoxRule>("ProductBoxRules")); }
        }
        private ObjectSet<ProductBoxRule> _productBoxRules;
    
        public ObjectSet<VDashboard> VDashboards
        {
            get { return _vDashboards  ?? (_vDashboards = CreateObjectSet<VDashboard>("VDashboards")); }
        }
        private ObjectSet<VDashboard> _vDashboards;
    
        public ObjectSet<vStoreExchangeRate> vStoreExchangeRates
        {
            get { return _vStoreExchangeRates  ?? (_vStoreExchangeRates = CreateObjectSet<vStoreExchangeRate>("vStoreExchangeRates")); }
        }
        private ObjectSet<vStoreExchangeRate> _vStoreExchangeRates;
    
        public ObjectSet<CountryAddress> CountryAddresses
        {
            get { return _countryAddresses  ?? (_countryAddresses = CreateObjectSet<CountryAddress>("CountryAddresses")); }
        }
        private ObjectSet<CountryAddress> _countryAddresses;
    
        public ObjectSet<ProductLimitedResource> ProductLimitedResources
        {
            get { return _productLimitedResources  ?? (_productLimitedResources = CreateObjectSet<ProductLimitedResource>("ProductLimitedResources")); }
        }
        private ObjectSet<ProductLimitedResource> _productLimitedResources;
    
        public ObjectSet<ProductDependency> ProductDependencies
        {
            get { return _productDependencies  ?? (_productDependencies = CreateObjectSet<ProductDependency>("ProductDependencies")); }
        }
        private ObjectSet<ProductDependency> _productDependencies;
    
        public ObjectSet<LimitedResource> LimitedResources
        {
            get { return _limitedResources  ?? (_limitedResources = CreateObjectSet<LimitedResource>("LimitedResources")); }
        }
        private ObjectSet<LimitedResource> _limitedResources;
    
        public ObjectSet<CountryParameter> CountryParameters
        {
            get { return _countryParameters  ?? (_countryParameters = CreateObjectSet<CountryParameter>("CountryParameters")); }
        }
        private ObjectSet<CountryParameter> _countryParameters;
    
        public ObjectSet<Widget> Widgets
        {
            get { return _widgets  ?? (_widgets = CreateObjectSet<Widget>("Widgets")); }
        }
        private ObjectSet<Widget> _widgets;
    
        public ObjectSet<PeripheralAddOn> PeripheralAddOns
        {
            get { return _peripheralAddOns  ?? (_peripheralAddOns = CreateObjectSet<PeripheralAddOn>("PeripheralAddOns")); }
        }
        private ObjectSet<PeripheralAddOn> _peripheralAddOns;
    
        public ObjectSet<PeripheralAddOnBundleItem> PeripheralAddOnBundleItems
        {
            get { return _peripheralAddOnBundleItems  ?? (_peripheralAddOnBundleItems = CreateObjectSet<PeripheralAddOnBundleItem>("PeripheralAddOnBundleItems")); }
        }
        private ObjectSet<PeripheralAddOnBundleItem> _peripheralAddOnBundleItems;
    
        public ObjectSet<Bundle> Bundles
        {
            get { return _bundles  ?? (_bundles = CreateObjectSet<Bundle>("Bundles")); }
        }
        private ObjectSet<Bundle> _bundles;
    
        public ObjectSet<ProductBundleItem> ProductBundleItems
        {
            get { return _productBundleItems  ?? (_productBundleItems = CreateObjectSet<ProductBundleItem>("ProductBundleItems")); }
        }
        private ObjectSet<ProductBundleItem> _productBundleItems;
    
        public ObjectSet<BundleItem> BundleItems
        {
            get { return _bundleItems  ?? (_bundleItems = CreateObjectSet<BundleItem>("BundleItems")); }
        }
        private ObjectSet<BundleItem> _bundleItems;
    
        public ObjectSet<EUUPSPrice> EUUPSPrices
        {
            get { return _eUUPSPrices  ?? (_eUUPSPrices = CreateObjectSet<EUUPSPrice>("EUUPSPrices")); }
        }
        private ObjectSet<EUUPSPrice> _eUUPSPrices;
    
        public ObjectSet<EUUPSZone> EUUPSZones
        {
            get { return _eUUPSZones  ?? (_eUUPSZones = CreateObjectSet<EUUPSZone>("EUUPSZones")); }
        }
        private ObjectSet<EUUPSZone> _eUUPSZones;
    
        public ObjectSet<CrossSellProduct> CrossSellProducts
        {
            get { return _crossSellProducts  ?? (_crossSellProducts = CreateObjectSet<CrossSellProduct>("CrossSellProducts")); }
        }
        private ObjectSet<CrossSellProduct> _crossSellProducts;
    
        public ObjectSet<PromotionAppliedLog> PromotionAppliedLogs
        {
            get { return _promotionAppliedLogs  ?? (_promotionAppliedLogs = CreateObjectSet<PromotionAppliedLog>("PromotionAppliedLogs")); }
        }
        private ObjectSet<PromotionAppliedLog> _promotionAppliedLogs;
    
        public ObjectSet<IDKAttribute> IDKAttributes
        {
            get { return _iDKAttributes  ?? (_iDKAttributes = CreateObjectSet<IDKAttribute>("IDKAttributes")); }
        }
        private ObjectSet<IDKAttribute> _iDKAttributes;
    
        public ObjectSet<ExtendedCategory> ExtendedCategories
        {
            get { return _extendedCategories  ?? (_extendedCategories = CreateObjectSet<ExtendedCategory>("ExtendedCategories")); }
        }
        private ObjectSet<ExtendedCategory> _extendedCategories;
    
        public ObjectSet<CTOSComponent> CTOSComponents
        {
            get { return _cTOSComponents  ?? (_cTOSComponents = CreateObjectSet<CTOSComponent>("CTOSComponents")); }
        }
        private ObjectSet<CTOSComponent> _cTOSComponents;
    
        public ObjectSet<CTOSComponentMapping> CTOSComponentMappings
        {
            get { return _cTOSComponentMappings  ?? (_cTOSComponentMappings = CreateObjectSet<CTOSComponentMapping>("CTOSComponentMappings")); }
        }
        private ObjectSet<CTOSComponentMapping> _cTOSComponentMappings;
    
        public ObjectSet<SpecialProductPrice> SpecialProductPrices
        {
            get { return _specialProductPrices  ?? (_specialProductPrices = CreateObjectSet<SpecialProductPrice>("SpecialProductPrices")); }
        }
        private ObjectSet<SpecialProductPrice> _specialProductPrices;
    
        public ObjectSet<CampaignMailLog> CampaignMailLogs
        {
            get { return _campaignMailLogs  ?? (_campaignMailLogs = CreateObjectSet<CampaignMailLog>("CampaignMailLogs")); }
        }
        private ObjectSet<CampaignMailLog> _campaignMailLogs;
    
        public ObjectSet<Campaign> Campaigns
        {
            get { return _campaigns  ?? (_campaigns = CreateObjectSet<Campaign>("Campaigns")); }
        }
        private ObjectSet<Campaign> _campaigns;
    
        public ObjectSet<CTOSComponentDetail> CTOSComponentDetails
        {
            get { return _cTOSComponentDetails  ?? (_cTOSComponentDetails = CreateObjectSet<CTOSComponentDetail>("CTOSComponentDetails")); }
        }
        private ObjectSet<CTOSComponentDetail> _cTOSComponentDetails;
    
        public ObjectSet<Task> Tasks
        {
            get { return _tasks  ?? (_tasks = CreateObjectSet<Task>("Tasks")); }
        }
        private ObjectSet<Task> _tasks;
    
        public ObjectSet<EDMCampaign> EDMCampaigns
        {
            get { return _eDMCampaigns  ?? (_eDMCampaigns = CreateObjectSet<EDMCampaign>("EDMCampaigns")); }
        }
        private ObjectSet<EDMCampaign> _eDMCampaigns;
    
        public ObjectSet<EDMCampaignScheduler> EDMCampaignSchedulers
        {
            get { return _eDMCampaignSchedulers  ?? (_eDMCampaignSchedulers = CreateObjectSet<EDMCampaignScheduler>("EDMCampaignSchedulers")); }
        }
        private ObjectSet<EDMCampaignScheduler> _eDMCampaignSchedulers;
    
        public ObjectSet<Member> Members
        {
            get { return _members  ?? (_members = CreateObjectSet<Member>("Members")); }
        }
        private ObjectSet<Member> _members;
    
        public ObjectSet<PeripheralProduct> PeripheralProducts
        {
            get { return _peripheralProducts  ?? (_peripheralProducts = CreateObjectSet<PeripheralProduct>("PeripheralProducts")); }
        }
        private ObjectSet<PeripheralProduct> _peripheralProducts;
    
        public ObjectSet<Currency> Currencies
        {
            get { return _currencies  ?? (_currencies = CreateObjectSet<Currency>("Currencies")); }
        }
        private ObjectSet<Currency> _currencies;
    
        public ObjectSet<StoreCurrency> StoreCurrencies
        {
            get { return _storeCurrencies  ?? (_storeCurrencies = CreateObjectSet<StoreCurrency>("StoreCurrencies")); }
        }
        private ObjectSet<StoreCurrency> _storeCurrencies;
    
        public ObjectSet<ApplicationSpot> ApplicationSpots
        {
            get { return _applicationSpots  ?? (_applicationSpots = CreateObjectSet<ApplicationSpot>("ApplicationSpots")); }
        }
        private ObjectSet<ApplicationSpot> _applicationSpots;
    
        public ObjectSet<ScenarioCategory> ScenarioCategories
        {
            get { return _scenarioCategories  ?? (_scenarioCategories = CreateObjectSet<ScenarioCategory>("ScenarioCategories")); }
        }
        private ObjectSet<ScenarioCategory> _scenarioCategories;
    
        public ObjectSet<ScenarioProductCategoryMapping> ScenarioProductCategoryMappings
        {
            get { return _scenarioProductCategoryMappings  ?? (_scenarioProductCategoryMappings = CreateObjectSet<ScenarioProductCategoryMapping>("ScenarioProductCategoryMappings")); }
        }
        private ObjectSet<ScenarioProductCategoryMapping> _scenarioProductCategoryMappings;
    
        public ObjectSet<ScenarioSpotMapping> ScenarioSpotMappings
        {
            get { return _scenarioSpotMappings  ?? (_scenarioSpotMappings = CreateObjectSet<ScenarioSpotMapping>("ScenarioSpotMappings")); }
        }
        private ObjectSet<ScenarioSpotMapping> _scenarioSpotMappings;
    
        public ObjectSet<VStoreProductMapping> VStoreProductMappings
        {
            get { return _vStoreProductMappings  ?? (_vStoreProductMappings = CreateObjectSet<VStoreProductMapping>("VStoreProductMappings")); }
        }
        private ObjectSet<VStoreProductMapping> _vStoreProductMappings;
    
        public ObjectSet<ECOIndustry> ECOIndustries
        {
            get { return _eCOIndustries  ?? (_eCOIndustries = CreateObjectSet<ECOIndustry>("ECOIndustries")); }
        }
        private ObjectSet<ECOIndustry> _eCOIndustries;
    
        public ObjectSet<ECOPartner> ECOPartners
        {
            get { return _eCOPartners  ?? (_eCOPartners = CreateObjectSet<ECOPartner>("ECOPartners")); }
        }
        private ObjectSet<ECOPartner> _eCOPartners;
    
        public ObjectSet<ECOPartnerIndustry> ECOPartnerIndustries
        {
            get { return _eCOPartnerIndustries  ?? (_eCOPartnerIndustries = CreateObjectSet<ECOPartnerIndustry>("ECOPartnerIndustries")); }
        }
        private ObjectSet<ECOPartnerIndustry> _eCOPartnerIndustries;
    
        public ObjectSet<ECOPartnerServiceCoverage> ECOPartnerServiceCoverages
        {
            get { return _eCOPartnerServiceCoverages  ?? (_eCOPartnerServiceCoverages = CreateObjectSet<ECOPartnerServiceCoverage>("ECOPartnerServiceCoverages")); }
        }
        private ObjectSet<ECOPartnerServiceCoverage> _eCOPartnerServiceCoverages;
    
        public ObjectSet<ECOPartnerSpecialty> ECOPartnerSpecialties
        {
            get { return _eCOPartnerSpecialties  ?? (_eCOPartnerSpecialties = CreateObjectSet<ECOPartnerSpecialty>("ECOPartnerSpecialties")); }
        }
        private ObjectSet<ECOPartnerSpecialty> _eCOPartnerSpecialties;
    
        public ObjectSet<ECOSpecialty> ECOSpecialties
        {
            get { return _eCOSpecialties  ?? (_eCOSpecialties = CreateObjectSet<ECOSpecialty>("ECOSpecialties")); }
        }
        private ObjectSet<ECOSpecialty> _eCOSpecialties;
    
        public ObjectSet<MiniSite> MiniSites
        {
            get { return _miniSites  ?? (_miniSites = CreateObjectSet<MiniSite>("MiniSites")); }
        }
        private ObjectSet<MiniSite> _miniSites;
    
        public ObjectSet<SiteParameter> SiteParameters
        {
            get { return _siteParameters  ?? (_siteParameters = CreateObjectSet<SiteParameter>("SiteParameters")); }
        }
        private ObjectSet<SiteParameter> _siteParameters;
    
        public ObjectSet<VProductMatrix> VProductMatrices
        {
            get { return _vProductMatrices  ?? (_vProductMatrices = CreateObjectSet<VProductMatrix>("VProductMatrices")); }
        }
        private ObjectSet<VProductMatrix> _vProductMatrices;
    
        public ObjectSet<ReplicationCategoryProductsMapping> ReplicationCategoryProductsMappings
        {
            get { return _replicationCategoryProductsMappings  ?? (_replicationCategoryProductsMappings = CreateObjectSet<ReplicationCategoryProductsMapping>("ReplicationCategoryProductsMappings")); }
        }
        private ObjectSet<ReplicationCategoryProductsMapping> _replicationCategoryProductsMappings;
    
        public ObjectSet<Affiliate> Affiliates
        {
            get { return _affiliates  ?? (_affiliates = CreateObjectSet<Affiliate>("Affiliates")); }
        }
        private ObjectSet<Affiliate> _affiliates;
    
        public ObjectSet<AffiliateTransaction> AffiliateTransactions
        {
            get { return _affiliateTransactions  ?? (_affiliateTransactions = CreateObjectSet<AffiliateTransaction>("AffiliateTransactions")); }
        }
        private ObjectSet<AffiliateTransaction> _affiliateTransactions;
    
        public ObjectSet<MemberClassChangeLog> MemberClassChangeLogs
        {
            get { return _memberClassChangeLogs  ?? (_memberClassChangeLogs = CreateObjectSet<MemberClassChangeLog>("MemberClassChangeLogs")); }
        }
        private ObjectSet<MemberClassChangeLog> _memberClassChangeLogs;
    
        public ObjectSet<RewardGiftItem> RewardGiftItems
        {
            get { return _rewardGiftItems  ?? (_rewardGiftItems = CreateObjectSet<RewardGiftItem>("RewardGiftItems")); }
        }
        private ObjectSet<RewardGiftItem> _rewardGiftItems;
    
        public ObjectSet<RewardLog> RewardLogs
        {
            get { return _rewardLogs  ?? (_rewardLogs = CreateObjectSet<RewardLog>("RewardLogs")); }
        }
        private ObjectSet<RewardLog> _rewardLogs;
    
        public ObjectSet<RewardCondition> RewardConditions
        {
            get { return _rewardConditions  ?? (_rewardConditions = CreateObjectSet<RewardCondition>("RewardConditions")); }
        }
        private ObjectSet<RewardCondition> _rewardConditions;
    
        public ObjectSet<SAP_COMPANY_PARTNERS> SAP_COMPANY_PARTNERS
        {
            get { return _sAP_COMPANY_PARTNERS  ?? (_sAP_COMPANY_PARTNERS = CreateObjectSet<SAP_COMPANY_PARTNERS>("SAP_COMPANY_PARTNERS")); }
        }
        private ObjectSet<SAP_COMPANY_PARTNERS> _sAP_COMPANY_PARTNERS;
    
        public ObjectSet<V_Intel_Product> V_Intel_Product
        {
            get { return _v_Intel_Product  ?? (_v_Intel_Product = CreateObjectSet<V_Intel_Product>("V_Intel_Product")); }
        }
        private ObjectSet<V_Intel_Product> _v_Intel_Product;
    
        public ObjectSet<GiftActivity> GiftActivities
        {
            get { return _giftActivities  ?? (_giftActivities = CreateObjectSet<GiftActivity>("GiftActivities")); }
        }
        private ObjectSet<GiftActivity> _giftActivities;
    
        public ObjectSet<GiftLog> GiftLogs
        {
            get { return _giftLogs  ?? (_giftLogs = CreateObjectSet<GiftLog>("GiftLogs")); }
        }
        private ObjectSet<GiftLog> _giftLogs;
    
        public ObjectSet<AddressValidate> AddressValidates
        {
            get { return _addressValidates  ?? (_addressValidates = CreateObjectSet<AddressValidate>("AddressValidates")); }
        }
        private ObjectSet<AddressValidate> _addressValidates;
    
        public ObjectSet<XRuleSet> XRuleSets
        {
            get { return _xRuleSets  ?? (_xRuleSets = CreateObjectSet<XRuleSet>("XRuleSets")); }
        }
        private ObjectSet<XRuleSet> _xRuleSets;
    
        public ObjectSet<CTOSAttributeValuelang> CTOSAttributeValuelangs
        {
            get { return _cTOSAttributeValuelangs  ?? (_cTOSAttributeValuelangs = CreateObjectSet<CTOSAttributeValuelang>("CTOSAttributeValuelangs")); }
        }
        private ObjectSet<CTOSAttributeValuelang> _cTOSAttributeValuelangs;
    
        public ObjectSet<PopularModel> PopularModels
        {
            get { return _popularModels  ?? (_popularModels = CreateObjectSet<PopularModel>("PopularModels")); }
        }
        private ObjectSet<PopularModel> _popularModels;
    
        public ObjectSet<PopularModelConvertHistory> PopularModelConvertHistories
        {
            get { return _popularModelConvertHistories  ?? (_popularModelConvertHistories = CreateObjectSet<PopularModelConvertHistory>("PopularModelConvertHistories")); }
        }
        private ObjectSet<PopularModelConvertHistory> _popularModelConvertHistories;
    
        public ObjectSet<PopularModelLog> PopularModelLogs
        {
            get { return _popularModelLogs  ?? (_popularModelLogs = CreateObjectSet<PopularModelLog>("PopularModelLogs")); }
        }
        private ObjectSet<PopularModelLog> _popularModelLogs;
    
        public ObjectSet<CountryLanguage> CountryLanguages
        {
            get { return _countryLanguages  ?? (_countryLanguages = CreateObjectSet<CountryLanguage>("CountryLanguages")); }
        }
        private ObjectSet<CountryLanguage> _countryLanguages;
    
        public ObjectSet<Language> Languages
        {
            get { return _languages  ?? (_languages = CreateObjectSet<Language>("Languages")); }
        }
        private ObjectSet<Language> _languages;
    
        public ObjectSet<MenuGlobalResource> MenuGlobalResources
        {
            get { return _menuGlobalResources  ?? (_menuGlobalResources = CreateObjectSet<MenuGlobalResource>("MenuGlobalResources")); }
        }
        private ObjectSet<MenuGlobalResource> _menuGlobalResources;
    
        public ObjectSet<StoreLanguage> StoreLanguages
        {
            get { return _storeLanguages  ?? (_storeLanguages = CreateObjectSet<StoreLanguage>("StoreLanguages")); }
        }
        private ObjectSet<StoreLanguage> _storeLanguages;
    
        public ObjectSet<TranslationGlobalResource> TranslationGlobalResources
        {
            get { return _translationGlobalResources  ?? (_translationGlobalResources = CreateObjectSet<TranslationGlobalResource>("TranslationGlobalResources")); }
        }
        private ObjectSet<TranslationGlobalResource> _translationGlobalResources;
    
        public ObjectSet<CategoriesGlobalResource> CategoriesGlobalResources
        {
            get { return _categoriesGlobalResources  ?? (_categoriesGlobalResources = CreateObjectSet<CategoriesGlobalResource>("CategoriesGlobalResources")); }
        }
        private ObjectSet<CategoriesGlobalResource> _categoriesGlobalResources;
    
        public ObjectSet<StoreErrorCodeGlobalResource> StoreErrorCodeGlobalResources
        {
            get { return _storeErrorCodeGlobalResources  ?? (_storeErrorCodeGlobalResources = CreateObjectSet<StoreErrorCodeGlobalResource>("StoreErrorCodeGlobalResources")); }
        }
        private ObjectSet<StoreErrorCodeGlobalResource> _storeErrorCodeGlobalResources;
    
        public ObjectSet<Spec_Category> Spec_Category
        {
            get { return _spec_Category  ?? (_spec_Category = CreateObjectSet<Spec_Category>("Spec_Category")); }
        }
        private ObjectSet<Spec_Category> _spec_Category;
    
        public ObjectSet<CountryCurrency> CountryCurrencies
        {
            get { return _countryCurrencies  ?? (_countryCurrencies = CreateObjectSet<CountryCurrency>("CountryCurrencies")); }
        }
        private ObjectSet<CountryCurrency> _countryCurrencies;
    
        public ObjectSet<EZCatalogAttribute> EZCatalogAttributes
        {
            get { return _eZCatalogAttributes  ?? (_eZCatalogAttributes = CreateObjectSet<EZCatalogAttribute>("EZCatalogAttributes")); }
        }
        private ObjectSet<EZCatalogAttribute> _eZCatalogAttributes;
    
        public ObjectSet<LanguagePack> LanguagePacks
        {
            get { return _languagePacks  ?? (_languagePacks = CreateObjectSet<LanguagePack>("LanguagePacks")); }
        }
        private ObjectSet<LanguagePack> _languagePacks;
    
        public ObjectSet<MBCPUMemorySpec> MBCPUMemorySpecs
        {
            get { return _mBCPUMemorySpecs  ?? (_mBCPUMemorySpecs = CreateObjectSet<MBCPUMemorySpec>("MBCPUMemorySpecs")); }
        }
        private ObjectSet<MBCPUMemorySpec> _mBCPUMemorySpecs;
    
        public ObjectSet<MBPeripherialBlackList> MBPeripherialBlackLists
        {
            get { return _mBPeripherialBlackLists  ?? (_mBPeripherialBlackLists = CreateObjectSet<MBPeripherialBlackList>("MBPeripherialBlackLists")); }
        }
        private ObjectSet<MBPeripherialBlackList> _mBPeripherialBlackLists;
    
        public ObjectSet<PStoreProductCategory> PStoreProductCategories
        {
            get { return _pStoreProductCategories  ?? (_pStoreProductCategories = CreateObjectSet<PStoreProductCategory>("PStoreProductCategories")); }
        }
        private ObjectSet<PStoreProductCategory> _pStoreProductCategories;
    
        public ObjectSet<ProductCategoryMetadataGroup> ProductCategoryMetadataGroups
        {
            get { return _productCategoryMetadataGroups  ?? (_productCategoryMetadataGroups = CreateObjectSet<ProductCategoryMetadataGroup>("ProductCategoryMetadataGroups")); }
        }
        private ObjectSet<ProductCategoryMetadataGroup> _productCategoryMetadataGroups;
    
        public ObjectSet<ProductCategoryMetadata> ProductCategoryMetadatas
        {
            get { return _productCategoryMetadatas  ?? (_productCategoryMetadatas = CreateObjectSet<ProductCategoryMetadata>("ProductCategoryMetadatas")); }
        }
        private ObjectSet<ProductCategoryMetadata> _productCategoryMetadatas;
    
        public ObjectSet<ProductCategoryMetadataValue> ProductCategoryMetadataValues
        {
            get { return _productCategoryMetadataValues  ?? (_productCategoryMetadataValues = CreateObjectSet<ProductCategoryMetadataValue>("ProductCategoryMetadataValues")); }
        }
        private ObjectSet<ProductCategoryMetadataValue> _productCategoryMetadataValues;
    
        public ObjectSet<PTDProduct> PTDProducts
        {
            get { return _pTDProducts  ?? (_pTDProducts = CreateObjectSet<PTDProduct>("PTDProducts")); }
        }
        private ObjectSet<PTDProduct> _pTDProducts;
    
        public ObjectSet<StoreDeal> StoreDeals
        {
            get { return _storeDeals  ?? (_storeDeals = CreateObjectSet<StoreDeal>("StoreDeals")); }
        }
        private ObjectSet<StoreDeal> _storeDeals;
    
        public ObjectSet<StoreProductAssociate> StoreProductAssociates
        {
            get { return _storeProductAssociates  ?? (_storeProductAssociates = CreateObjectSet<StoreProductAssociate>("StoreProductAssociates")); }
        }
        private ObjectSet<StoreProductAssociate> _storeProductAssociates;
    
        public ObjectSet<StoreProductBundleList> StoreProductBundleLists
        {
            get { return _storeProductBundleLists  ?? (_storeProductBundleLists = CreateObjectSet<StoreProductBundleList>("StoreProductBundleLists")); }
        }
        private ObjectSet<StoreProductBundleList> _storeProductBundleLists;
    
        public ObjectSet<StoreProductBundle> StoreProductBundles
        {
            get { return _storeProductBundles  ?? (_storeProductBundles = CreateObjectSet<StoreProductBundle>("StoreProductBundles")); }
        }
        private ObjectSet<StoreProductBundle> _storeProductBundles;
    
        public ObjectSet<StoreProductCategory> StoreProductCategories
        {
            get { return _storeProductCategories  ?? (_storeProductCategories = CreateObjectSet<StoreProductCategory>("StoreProductCategories")); }
        }
        private ObjectSet<StoreProductCategory> _storeProductCategories;
    
        public ObjectSet<StoreProduct> StoreProducts
        {
            get { return _storeProducts  ?? (_storeProducts = CreateObjectSet<StoreProduct>("StoreProducts")); }
        }
        private ObjectSet<StoreProduct> _storeProducts;
    
        public ObjectSet<StoreProductYouMayAlsoBuy> StoreProductYouMayAlsoBuys
        {
            get { return _storeProductYouMayAlsoBuys  ?? (_storeProductYouMayAlsoBuys = CreateObjectSet<StoreProductYouMayAlsoBuy>("StoreProductYouMayAlsoBuys")); }
        }
        private ObjectSet<StoreProductYouMayAlsoBuy> _storeProductYouMayAlsoBuys;
    
        public ObjectSet<PStore> PStores
        {
            get { return _pStores  ?? (_pStores = CreateObjectSet<PStore>("PStores")); }
        }
        private ObjectSet<PStore> _pStores;
    
        public ObjectSet<SAP_EMPLOYEE> SAP_EMPLOYEE
        {
            get { return _sAP_EMPLOYEE  ?? (_sAP_EMPLOYEE = CreateObjectSet<SAP_EMPLOYEE>("SAP_EMPLOYEE")); }
        }
        private ObjectSet<SAP_EMPLOYEE> _sAP_EMPLOYEE;
    
        public ObjectSet<VSAPCompany> VSAPCompanies
        {
            get { return _vSAPCompanies  ?? (_vSAPCompanies = CreateObjectSet<VSAPCompany>("VSAPCompanies")); }
        }
        private ObjectSet<VSAPCompany> _vSAPCompanies;
    
        public ObjectSet<Shortcut> Shortcuts
        {
            get { return _shortcuts  ?? (_shortcuts = CreateObjectSet<Shortcut>("Shortcuts")); }
        }
        private ObjectSet<Shortcut> _shortcuts;
    
        public ObjectSet<ProductWidgetMapping> ProductWidgetMappings
        {
            get { return _productWidgetMappings  ?? (_productWidgetMappings = CreateObjectSet<ProductWidgetMapping>("ProductWidgetMappings")); }
        }
        private ObjectSet<ProductWidgetMapping> _productWidgetMappings;
    
        public ObjectSet<PolicyCategoryGlobalResource> PolicyCategoryGlobalResources
        {
            get { return _policyCategoryGlobalResources  ?? (_policyCategoryGlobalResources = CreateObjectSet<PolicyCategoryGlobalResource>("PolicyCategoryGlobalResources")); }
        }
        private ObjectSet<PolicyCategoryGlobalResource> _policyCategoryGlobalResources;
    
        public ObjectSet<SolutionsAssosociateItem> SolutionsAssosociateItems
        {
            get { return _solutionsAssosociateItems  ?? (_solutionsAssosociateItems = CreateObjectSet<SolutionsAssosociateItem>("SolutionsAssosociateItems")); }
        }
        private ObjectSet<SolutionsAssosociateItem> _solutionsAssosociateItems;
    
        public ObjectSet<CampaignCode> CampaignCodes
        {
            get { return _campaignCodes  ?? (_campaignCodes = CreateObjectSet<CampaignCode>("CampaignCodes")); }
        }
        private ObjectSet<CampaignCode> _campaignCodes;
    
        public ObjectSet<PolicyGlobalResource> PolicyGlobalResources
        {
            get { return _policyGlobalResources  ?? (_policyGlobalResources = CreateObjectSet<PolicyGlobalResource>("PolicyGlobalResources")); }
        }
        private ObjectSet<PolicyGlobalResource> _policyGlobalResources;
    
        public ObjectSet<Solution> Solutions
        {
            get { return _solutions  ?? (_solutions = CreateObjectSet<Solution>("Solutions")); }
        }
        private ObjectSet<Solution> _solutions;
    
        public ObjectSet<SolutionGlobalResource> SolutionGlobalResources
        {
            get { return _solutionGlobalResources  ?? (_solutionGlobalResources = CreateObjectSet<SolutionGlobalResource>("SolutionGlobalResources")); }
        }
        private ObjectSet<SolutionGlobalResource> _solutionGlobalResources;
    
        public ObjectSet<USPSPackage> USPSPackages
        {
            get { return _uSPSPackages  ?? (_uSPSPackages = CreateObjectSet<USPSPackage>("USPSPackages")); }
        }
        private ObjectSet<USPSPackage> _uSPSPackages;
    
        public ObjectSet<Policy> Policies
        {
            get { return _policies  ?? (_policies = CreateObjectSet<Policy>("Policies")); }
        }
        private ObjectSet<Policy> _policies;
    
        public ObjectSet<PolicyCategory> PolicyCategories
        {
            get { return _policyCategories  ?? (_policyCategories = CreateObjectSet<PolicyCategory>("PolicyCategories")); }
        }
        private ObjectSet<PolicyCategory> _policyCategories;
    
        public ObjectSet<CategoryMapping> CategoryMappings
        {
            get { return _categoryMappings  ?? (_categoryMappings = CreateObjectSet<CategoryMapping>("CategoryMappings")); }
        }
        private ObjectSet<CategoryMapping> _categoryMappings;
    
        public ObjectSet<SimpleProduct> SimpleProducts
        {
            get { return _simpleProducts  ?? (_simpleProducts = CreateObjectSet<SimpleProduct>("SimpleProducts")); }
        }
        private ObjectSet<SimpleProduct> _simpleProducts;
    
        public ObjectSet<RewardActivity> RewardActivities
        {
            get { return _rewardActivities  ?? (_rewardActivities = CreateObjectSet<RewardActivity>("RewardActivities")); }
        }
        private ObjectSet<RewardActivity> _rewardActivities;
    
        public ObjectSet<ZTSD_106A> ZTSD_106A
        {
            get { return _zTSD_106A  ?? (_zTSD_106A = CreateObjectSet<ZTSD_106A>("ZTSD_106A")); }
        }
        private ObjectSet<ZTSD_106A> _zTSD_106A;
    
        public ObjectSet<ZTSD_106C> ZTSD_106C
        {
            get { return _zTSD_106C  ?? (_zTSD_106C = CreateObjectSet<ZTSD_106C>("ZTSD_106C")); }
        }
        private ObjectSet<ZTSD_106C> _zTSD_106C;
    
        public ObjectSet<PostFormLog> PostFormLogs
        {
            get { return _postFormLogs  ?? (_postFormLogs = CreateObjectSet<PostFormLog>("PostFormLogs")); }
        }
        private ObjectSet<PostFormLog> _postFormLogs;
    
        public ObjectSet<ProductBatchStatu> ProductBatchStatus
        {
            get { return _productBatchStatus  ?? (_productBatchStatus = CreateObjectSet<ProductBatchStatu>("ProductBatchStatus")); }
        }
        private ObjectSet<ProductBatchStatu> _productBatchStatus;
    
        public ObjectSet<ProductBatchStatusMapping> ProductBatchStatusMappings
        {
            get { return _productBatchStatusMappings  ?? (_productBatchStatusMappings = CreateObjectSet<ProductBatchStatusMapping>("ProductBatchStatusMappings")); }
        }
        private ObjectSet<ProductBatchStatusMapping> _productBatchStatusMappings;
    
        public ObjectSet<RewardRecord> RewardRecords
        {
            get { return _rewardRecords  ?? (_rewardRecords = CreateObjectSet<RewardRecord>("RewardRecords")); }
        }
        private ObjectSet<RewardRecord> _rewardRecords;
    
        public ObjectSet<WidgetRequest> WidgetRequests
        {
            get { return _widgetRequests  ?? (_widgetRequests = CreateObjectSet<WidgetRequest>("WidgetRequests")); }
        }
        private ObjectSet<WidgetRequest> _widgetRequests;
    
        public ObjectSet<WidgetRequestDetail> WidgetRequestDetails
        {
            get { return _widgetRequestDetails  ?? (_widgetRequestDetails = CreateObjectSet<WidgetRequestDetail>("WidgetRequestDetails")); }
        }
        private ObjectSet<WidgetRequestDetail> _widgetRequestDetails;
    
        public ObjectSet<SiteBuilder> SiteBuilders
        {
            get { return _siteBuilders  ?? (_siteBuilders = CreateObjectSet<SiteBuilder>("SiteBuilders")); }
        }
        private ObjectSet<SiteBuilder> _siteBuilders;
    
        public ObjectSet<SiteBuilderParameter> SiteBuilderParameters
        {
            get { return _siteBuilderParameters  ?? (_siteBuilderParameters = CreateObjectSet<SiteBuilderParameter>("SiteBuilderParameters")); }
        }
        private ObjectSet<SiteBuilderParameter> _siteBuilderParameters;
    
        public ObjectSet<KitTheme> KitThemes
        {
            get { return _kitThemes  ?? (_kitThemes = CreateObjectSet<KitTheme>("KitThemes")); }
        }
        private ObjectSet<KitTheme> _kitThemes;
    
        public ObjectSet<KitThemeType> KitThemeTypes
        {
            get { return _kitThemeTypes  ?? (_kitThemeTypes = CreateObjectSet<KitThemeType>("KitThemeTypes")); }
        }
        private ObjectSet<KitThemeType> _kitThemeTypes;
    
        public ObjectSet<KitThemeMapping> KitThemeMappings
        {
            get { return _kitThemeMappings  ?? (_kitThemeMappings = CreateObjectSet<KitThemeMapping>("KitThemeMappings")); }
        }
        private ObjectSet<KitThemeMapping> _kitThemeMappings;
    
        public ObjectSet<KitThemeMappingDetail> KitThemeMappingDetails
        {
            get { return _kitThemeMappingDetails  ?? (_kitThemeMappingDetails = CreateObjectSet<KitThemeMappingDetail>("KitThemeMappingDetails")); }
        }
        private ObjectSet<KitThemeMappingDetail> _kitThemeMappingDetails;
    
        public ObjectSet<Part_Spec_V3> Part_Spec_V3
        {
            get { return _part_Spec_V3  ?? (_part_Spec_V3 = CreateObjectSet<Part_Spec_V3>("Part_Spec_V3")); }
        }
        private ObjectSet<Part_Spec_V3> _part_Spec_V3;
    
        public ObjectSet<Spec_Category_Lang> Spec_Category_Lang
        {
            get { return _spec_Category_Lang  ?? (_spec_Category_Lang = CreateObjectSet<Spec_Category_Lang>("Spec_Category_Lang")); }
        }
        private ObjectSet<Spec_Category_Lang> _spec_Category_Lang;
    
        public ObjectSet<SiebelContactBAA> SiebelContactBAAs
        {
            get { return _siebelContactBAAs  ?? (_siebelContactBAAs = CreateObjectSet<SiebelContactBAA>("SiebelContactBAAs")); }
        }
        private ObjectSet<SiebelContactBAA> _siebelContactBAAs;
    
        public ObjectSet<PartGradePrice> PartGradePrices
        {
            get { return _partGradePrices  ?? (_partGradePrices = CreateObjectSet<PartGradePrice>("PartGradePrices")); }
        }
        private ObjectSet<PartGradePrice> _partGradePrices;
    
        public ObjectSet<UserGrade> UserGrades
        {
            get { return _userGrades  ?? (_userGrades = CreateObjectSet<UserGrade>("UserGrades")); }
        }
        private ObjectSet<UserGrade> _userGrades;
    
        public ObjectSet<TagMapping> TagMappings
        {
            get { return _tagMappings  ?? (_tagMappings = CreateObjectSet<TagMapping>("TagMappings")); }
        }
        private ObjectSet<TagMapping> _tagMappings;
    
        public ObjectSet<Tag> Tags
        {
            get { return _tags  ?? (_tags = CreateObjectSet<Tag>("Tags")); }
        }
        private ObjectSet<Tag> _tags;
    
        public ObjectSet<LocationIp> LocationIps
        {
            get { return _locationIps  ?? (_locationIps = CreateObjectSet<LocationIp>("LocationIps")); }
        }
        private ObjectSet<LocationIp> _locationIps;
    
        public ObjectSet<PartnersInfo> PartnersInfoes
        {
            get { return _partnersInfoes  ?? (_partnersInfoes = CreateObjectSet<PartnersInfo>("PartnersInfoes")); }
        }
        private ObjectSet<PartnersInfo> _partnersInfoes;
    
        public ObjectSet<SpecMask> SpecMasks
        {
            get { return _specMasks  ?? (_specMasks = CreateObjectSet<SpecMask>("SpecMasks")); }
        }
        private ObjectSet<SpecMask> _specMasks;
    
        public ObjectSet<CampaignMailLogByEDM> CampaignMailLogByEDMs
        {
            get { return _campaignMailLogByEDMs  ?? (_campaignMailLogByEDMs = CreateObjectSet<CampaignMailLogByEDM>("CampaignMailLogByEDMs")); }
        }
        private ObjectSet<CampaignMailLogByEDM> _campaignMailLogByEDMs;
    
        public ObjectSet<EDMCodeMapping> EDMCodeMappings
        {
            get { return _eDMCodeMappings  ?? (_eDMCodeMappings = CreateObjectSet<EDMCodeMapping>("EDMCodeMappings")); }
        }
        private ObjectSet<EDMCodeMapping> _eDMCodeMappings;
    
        public ObjectSet<StoreEDMInfo> StoreEDMInfoes
        {
            get { return _storeEDMInfoes  ?? (_storeEDMInfoes = CreateObjectSet<StoreEDMInfo>("StoreEDMInfoes")); }
        }
        private ObjectSet<StoreEDMInfo> _storeEDMInfoes;
    
        public ObjectSet<SAP_Product_Warranty> SAP_Product_Warranty
        {
            get { return _sAP_Product_Warranty  ?? (_sAP_Product_Warranty = CreateObjectSet<SAP_Product_Warranty>("SAP_Product_Warranty")); }
        }
        private ObjectSet<SAP_Product_Warranty> _sAP_Product_Warranty;

        #endregion

        #region Function Imports
        public ObjectResult<string> GetNewSeqVal(string seqName, string storeID)
        {
    
            ObjectParameter seqNameParameter;
    
            if (seqName != null)
            {
                seqNameParameter = new ObjectParameter("SeqName", seqName);
            }
            else
            {
                seqNameParameter = new ObjectParameter("SeqName", typeof(string));
            }
    
            ObjectParameter storeIDParameter;
    
            if (storeID != null)
            {
                storeIDParameter = new ObjectParameter("StoreID", storeID);
            }
            else
            {
                storeIDParameter = new ObjectParameter("StoreID", typeof(string));
            }
            return base.ExecuteFunction<string>("GetNewSeqVal", seqNameParameter, storeIDParameter);
        }
        public ObjectResult<Part> spFilter(string where, string categoryid, string storeid)
        {
    
            ObjectParameter whereParameter;
    
            if (where != null)
            {
                whereParameter = new ObjectParameter("where", where);
            }
            else
            {
                whereParameter = new ObjectParameter("where", typeof(string));
            }
    
            ObjectParameter categoryidParameter;
    
            if (categoryid != null)
            {
                categoryidParameter = new ObjectParameter("categoryid", categoryid);
            }
            else
            {
                categoryidParameter = new ObjectParameter("categoryid", typeof(string));
            }
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
            return base.ExecuteFunction<Part>("spFilter", whereParameter, categoryidParameter, storeidParameter);
        }
        public ObjectResult<spGetSpecCount_Result> spGetSpecCount(string storeID, string categoryID, string keyword)
        {
    
            ObjectParameter storeIDParameter;
    
            if (storeID != null)
            {
                storeIDParameter = new ObjectParameter("StoreID", storeID);
            }
            else
            {
                storeIDParameter = new ObjectParameter("StoreID", typeof(string));
            }
    
            ObjectParameter categoryIDParameter;
    
            if (categoryID != null)
            {
                categoryIDParameter = new ObjectParameter("CategoryID", categoryID);
            }
            else
            {
                categoryIDParameter = new ObjectParameter("CategoryID", typeof(string));
            }
    
            ObjectParameter keywordParameter;
    
            if (keyword != null)
            {
                keywordParameter = new ObjectParameter("Keyword", keyword);
            }
            else
            {
                keywordParameter = new ObjectParameter("Keyword", typeof(string));
            }
            return base.ExecuteFunction<spGetSpecCount_Result>("spGetSpecCount", storeIDParameter, categoryIDParameter, keywordParameter);
        }
        public ObjectResult<Nullable<int>> spUpdatePayment(string cardnumber, string paymentid)
        {
    
            ObjectParameter cardnumberParameter;
    
            if (cardnumber != null)
            {
                cardnumberParameter = new ObjectParameter("cardnumber", cardnumber);
            }
            else
            {
                cardnumberParameter = new ObjectParameter("cardnumber", typeof(string));
            }
    
            ObjectParameter paymentidParameter;
    
            if (paymentid != null)
            {
                paymentidParameter = new ObjectParameter("paymentid", paymentid);
            }
            else
            {
                paymentidParameter = new ObjectParameter("paymentid", typeof(string));
            }
            return base.ExecuteFunction<Nullable<int>>("spUpdatePayment", cardnumberParameter, paymentidParameter);
        }
        public ObjectResult<string> DecryptPayment(string paymentid)
        {
    
            ObjectParameter paymentidParameter;
    
            if (paymentid != null)
            {
                paymentidParameter = new ObjectParameter("paymentid", paymentid);
            }
            else
            {
                paymentidParameter = new ObjectParameter("paymentid", typeof(string));
            }
            return base.ExecuteFunction<string>("DecryptPayment", paymentidParameter);
        }
        public ObjectResult<Nullable<int>> SPInsertPeripheralProducts(string partNo, string main_Catagory, string sub_Category, string description, Nullable<decimal> price, string sap_Status, string version, string storeid)
        {
    
            ObjectParameter partNoParameter;
    
            if (partNo != null)
            {
                partNoParameter = new ObjectParameter("partNo", partNo);
            }
            else
            {
                partNoParameter = new ObjectParameter("partNo", typeof(string));
            }
    
            ObjectParameter main_CatagoryParameter;
    
            if (main_Catagory != null)
            {
                main_CatagoryParameter = new ObjectParameter("main_Catagory", main_Catagory);
            }
            else
            {
                main_CatagoryParameter = new ObjectParameter("main_Catagory", typeof(string));
            }
    
            ObjectParameter sub_CategoryParameter;
    
            if (sub_Category != null)
            {
                sub_CategoryParameter = new ObjectParameter("sub_Category", sub_Category);
            }
            else
            {
                sub_CategoryParameter = new ObjectParameter("sub_Category", typeof(string));
            }
    
            ObjectParameter descriptionParameter;
    
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(string));
            }
    
            ObjectParameter priceParameter;
    
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("price", typeof(decimal));
            }
    
            ObjectParameter sap_StatusParameter;
    
            if (sap_Status != null)
            {
                sap_StatusParameter = new ObjectParameter("sap_Status", sap_Status);
            }
            else
            {
                sap_StatusParameter = new ObjectParameter("sap_Status", typeof(string));
            }
    
            ObjectParameter versionParameter;
    
            if (version != null)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(string));
            }
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
            return base.ExecuteFunction<Nullable<int>>("SPInsertPeripheralProducts", partNoParameter, main_CatagoryParameter, sub_CategoryParameter, descriptionParameter, priceParameter, sap_StatusParameter, versionParameter, storeidParameter);
        }
        public ObjectResult<Nullable<int>> InsertProductOnly(string storeID, string sProductID, string displayPartno, Nullable<bool> showPrice, Nullable<bool> publishStatus, Nullable<decimal> storePrice, string priceSource, string status, string productDesc, string productFeatures, string extendedDesc, string imageURL, Nullable<decimal> promotePrice, Nullable<System.DateTime> promoteStart, Nullable<System.DateTime> promoteEnd, string promoteMessage, Nullable<int> clearanceThreshold, Nullable<decimal> promoteMarkup, Nullable<System.DateTime> effectiveDate, Nullable<System.DateTime> expiredDate, string keywords, string productGroup, string pageTitle, string pageDescription)
        {
    
            ObjectParameter storeIDParameter;
    
            if (storeID != null)
            {
                storeIDParameter = new ObjectParameter("StoreID", storeID);
            }
            else
            {
                storeIDParameter = new ObjectParameter("StoreID", typeof(string));
            }
    
            ObjectParameter sProductIDParameter;
    
            if (sProductID != null)
            {
                sProductIDParameter = new ObjectParameter("SProductID", sProductID);
            }
            else
            {
                sProductIDParameter = new ObjectParameter("SProductID", typeof(string));
            }
    
            ObjectParameter displayPartnoParameter;
    
            if (displayPartno != null)
            {
                displayPartnoParameter = new ObjectParameter("DisplayPartno", displayPartno);
            }
            else
            {
                displayPartnoParameter = new ObjectParameter("DisplayPartno", typeof(string));
            }
    
            ObjectParameter showPriceParameter;
    
            if (showPrice.HasValue)
            {
                showPriceParameter = new ObjectParameter("ShowPrice", showPrice);
            }
            else
            {
                showPriceParameter = new ObjectParameter("ShowPrice", typeof(bool));
            }
    
            ObjectParameter publishStatusParameter;
    
            if (publishStatus.HasValue)
            {
                publishStatusParameter = new ObjectParameter("PublishStatus", publishStatus);
            }
            else
            {
                publishStatusParameter = new ObjectParameter("PublishStatus", typeof(bool));
            }
    
            ObjectParameter storePriceParameter;
    
            if (storePrice.HasValue)
            {
                storePriceParameter = new ObjectParameter("StorePrice", storePrice);
            }
            else
            {
                storePriceParameter = new ObjectParameter("StorePrice", typeof(decimal));
            }
    
            ObjectParameter priceSourceParameter;
    
            if (priceSource != null)
            {
                priceSourceParameter = new ObjectParameter("PriceSource", priceSource);
            }
            else
            {
                priceSourceParameter = new ObjectParameter("PriceSource", typeof(string));
            }
    
            ObjectParameter statusParameter;
    
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(string));
            }
    
            ObjectParameter productDescParameter;
    
            if (productDesc != null)
            {
                productDescParameter = new ObjectParameter("ProductDesc", productDesc);
            }
            else
            {
                productDescParameter = new ObjectParameter("ProductDesc", typeof(string));
            }
    
            ObjectParameter productFeaturesParameter;
    
            if (productFeatures != null)
            {
                productFeaturesParameter = new ObjectParameter("ProductFeatures", productFeatures);
            }
            else
            {
                productFeaturesParameter = new ObjectParameter("ProductFeatures", typeof(string));
            }
    
            ObjectParameter extendedDescParameter;
    
            if (extendedDesc != null)
            {
                extendedDescParameter = new ObjectParameter("ExtendedDesc", extendedDesc);
            }
            else
            {
                extendedDescParameter = new ObjectParameter("ExtendedDesc", typeof(string));
            }
    
            ObjectParameter imageURLParameter;
    
            if (imageURL != null)
            {
                imageURLParameter = new ObjectParameter("ImageURL", imageURL);
            }
            else
            {
                imageURLParameter = new ObjectParameter("ImageURL", typeof(string));
            }
    
            ObjectParameter promotePriceParameter;
    
            if (promotePrice.HasValue)
            {
                promotePriceParameter = new ObjectParameter("PromotePrice", promotePrice);
            }
            else
            {
                promotePriceParameter = new ObjectParameter("PromotePrice", typeof(decimal));
            }
    
            ObjectParameter promoteStartParameter;
    
            if (promoteStart.HasValue)
            {
                promoteStartParameter = new ObjectParameter("PromoteStart", promoteStart);
            }
            else
            {
                promoteStartParameter = new ObjectParameter("PromoteStart", typeof(System.DateTime));
            }
    
            ObjectParameter promoteEndParameter;
    
            if (promoteEnd.HasValue)
            {
                promoteEndParameter = new ObjectParameter("PromoteEnd", promoteEnd);
            }
            else
            {
                promoteEndParameter = new ObjectParameter("PromoteEnd", typeof(System.DateTime));
            }
    
            ObjectParameter promoteMessageParameter;
    
            if (promoteMessage != null)
            {
                promoteMessageParameter = new ObjectParameter("PromoteMessage", promoteMessage);
            }
            else
            {
                promoteMessageParameter = new ObjectParameter("PromoteMessage", typeof(string));
            }
    
            ObjectParameter clearanceThresholdParameter;
    
            if (clearanceThreshold.HasValue)
            {
                clearanceThresholdParameter = new ObjectParameter("ClearanceThreshold", clearanceThreshold);
            }
            else
            {
                clearanceThresholdParameter = new ObjectParameter("ClearanceThreshold", typeof(int));
            }
    
            ObjectParameter promoteMarkupParameter;
    
            if (promoteMarkup.HasValue)
            {
                promoteMarkupParameter = new ObjectParameter("PromoteMarkup", promoteMarkup);
            }
            else
            {
                promoteMarkupParameter = new ObjectParameter("PromoteMarkup", typeof(decimal));
            }
    
            ObjectParameter effectiveDateParameter;
    
            if (effectiveDate.HasValue)
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", effectiveDate);
            }
            else
            {
                effectiveDateParameter = new ObjectParameter("EffectiveDate", typeof(System.DateTime));
            }
    
            ObjectParameter expiredDateParameter;
    
            if (expiredDate.HasValue)
            {
                expiredDateParameter = new ObjectParameter("ExpiredDate", expiredDate);
            }
            else
            {
                expiredDateParameter = new ObjectParameter("ExpiredDate", typeof(System.DateTime));
            }
    
            ObjectParameter keywordsParameter;
    
            if (keywords != null)
            {
                keywordsParameter = new ObjectParameter("Keywords", keywords);
            }
            else
            {
                keywordsParameter = new ObjectParameter("Keywords", typeof(string));
            }
    
            ObjectParameter productGroupParameter;
    
            if (productGroup != null)
            {
                productGroupParameter = new ObjectParameter("ProductGroup", productGroup);
            }
            else
            {
                productGroupParameter = new ObjectParameter("ProductGroup", typeof(string));
            }
    
            ObjectParameter pageTitleParameter;
    
            if (pageTitle != null)
            {
                pageTitleParameter = new ObjectParameter("PageTitle", pageTitle);
            }
            else
            {
                pageTitleParameter = new ObjectParameter("PageTitle", typeof(string));
            }
    
            ObjectParameter pageDescriptionParameter;
    
            if (pageDescription != null)
            {
                pageDescriptionParameter = new ObjectParameter("PageDescription", pageDescription);
            }
            else
            {
                pageDescriptionParameter = new ObjectParameter("PageDescription", typeof(string));
            }
            return base.ExecuteFunction<Nullable<int>>("InsertProductOnly", storeIDParameter, sProductIDParameter, displayPartnoParameter, showPriceParameter, publishStatusParameter, storePriceParameter, priceSourceParameter, statusParameter, productDescParameter, productFeaturesParameter, extendedDescParameter, imageURLParameter, promotePriceParameter, promoteStartParameter, promoteEndParameter, promoteMessageParameter, clearanceThresholdParameter, promoteMarkupParameter, effectiveDateParameter, expiredDateParameter, keywordsParameter, productGroupParameter, pageTitleParameter, pageDescriptionParameter);
        }
        public ObjectResult<Nullable<int>> UpdateSAPProduct()
        {
            return base.ExecuteFunction<Nullable<int>>("UpdateSAPProduct");
        }
        public ObjectResult<Nullable<int>> spsyncSAPCompany()
        {
            return base.ExecuteFunction<Nullable<int>>("spsyncSAPCompany");
        }
        public ObjectResult<Nullable<int>> spUnpblishProducts()
        {
            return base.ExecuteFunction<Nullable<int>>("spUnpblishProducts");
        }
        public ObjectResult<ExportCBOM_Result> spExportCBOM(string storeid, Nullable<bool> includeAll)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter includeAllParameter;
    
            if (includeAll.HasValue)
            {
                includeAllParameter = new ObjectParameter("includeAll", includeAll);
            }
            else
            {
                includeAllParameter = new ObjectParameter("includeAll", typeof(bool));
            }
            return base.ExecuteFunction<ExportCBOM_Result>("spExportCBOM", storeidParameter, includeAllParameter);
        }
        public ObjectResult<Nullable<int>> spReplacePartno(Nullable<int> oldcomponentid, Nullable<int> newcomponentid, string storeid, string sproductids, Nullable<bool> delete)
        {
    
            ObjectParameter oldcomponentidParameter;
    
            if (oldcomponentid.HasValue)
            {
                oldcomponentidParameter = new ObjectParameter("oldcomponentid", oldcomponentid);
            }
            else
            {
                oldcomponentidParameter = new ObjectParameter("oldcomponentid", typeof(int));
            }
    
            ObjectParameter newcomponentidParameter;
    
            if (newcomponentid.HasValue)
            {
                newcomponentidParameter = new ObjectParameter("newcomponentid", newcomponentid);
            }
            else
            {
                newcomponentidParameter = new ObjectParameter("newcomponentid", typeof(int));
            }
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter sproductidsParameter;
    
            if (sproductids != null)
            {
                sproductidsParameter = new ObjectParameter("sproductids", sproductids);
            }
            else
            {
                sproductidsParameter = new ObjectParameter("sproductids", typeof(string));
            }
    
            ObjectParameter deleteParameter;
    
            if (delete.HasValue)
            {
                deleteParameter = new ObjectParameter("delete", delete);
            }
            else
            {
                deleteParameter = new ObjectParameter("delete", typeof(bool));
            }
            return base.ExecuteFunction<Nullable<int>>("spReplacePartno", oldcomponentidParameter, newcomponentidParameter, storeidParameter, sproductidsParameter, deleteParameter);
        }
        public ObjectResult<Nullable<int>> sp_InsertUserRole(string userID, Nullable<int> roleId)
        {
    
            ObjectParameter userIDParameter;
    
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(string));
            }
    
            ObjectParameter roleIdParameter;
    
            if (roleId.HasValue)
            {
                roleIdParameter = new ObjectParameter("RoleId", roleId);
            }
            else
            {
                roleIdParameter = new ObjectParameter("RoleId", typeof(int));
            }
            return base.ExecuteFunction<Nullable<int>>("sp_InsertUserRole", userIDParameter, roleIdParameter);
        }
        public ObjectResult<spGetSpecByCategory_Result> spGetSpecByCategory(string storeID, Nullable<int> ruleSetID, string categorypath)
        {
    
            ObjectParameter storeIDParameter;
    
            if (storeID != null)
            {
                storeIDParameter = new ObjectParameter("StoreID", storeID);
            }
            else
            {
                storeIDParameter = new ObjectParameter("StoreID", typeof(string));
            }
    
            ObjectParameter ruleSetIDParameter;
    
            if (ruleSetID.HasValue)
            {
                ruleSetIDParameter = new ObjectParameter("RuleSetID", ruleSetID);
            }
            else
            {
                ruleSetIDParameter = new ObjectParameter("RuleSetID", typeof(int));
            }
    
            ObjectParameter categorypathParameter;
    
            if (categorypath != null)
            {
                categorypathParameter = new ObjectParameter("categorypath", categorypath);
            }
            else
            {
                categorypathParameter = new ObjectParameter("categorypath", typeof(string));
            }
            return base.ExecuteFunction<spGetSpecByCategory_Result>("spGetSpecByCategory", storeIDParameter, ruleSetIDParameter, categorypathParameter);
        }
        public ObjectResult<getDashBoard_Result> sp_getDashBoard(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
    
            ObjectParameter startdateParameter;
    
            if (startdate.HasValue)
            {
                startdateParameter = new ObjectParameter("startdate", startdate);
            }
            else
            {
                startdateParameter = new ObjectParameter("startdate", typeof(System.DateTime));
            }
    
            ObjectParameter enddateParameter;
    
            if (enddate.HasValue)
            {
                enddateParameter = new ObjectParameter("enddate", enddate);
            }
            else
            {
                enddateParameter = new ObjectParameter("enddate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<getDashBoard_Result>("sp_getDashBoard", startdateParameter, enddateParameter);
        }
        public ObjectResult<sp_getUserActivityDashBoard_Result> sp_getUserActivityDashBoard(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string storeId, string showType)
        {
    
            ObjectParameter startdateParameter;
    
            if (startdate.HasValue)
            {
                startdateParameter = new ObjectParameter("startdate", startdate);
            }
            else
            {
                startdateParameter = new ObjectParameter("startdate", typeof(System.DateTime));
            }
    
            ObjectParameter enddateParameter;
    
            if (enddate.HasValue)
            {
                enddateParameter = new ObjectParameter("enddate", enddate);
            }
            else
            {
                enddateParameter = new ObjectParameter("enddate", typeof(System.DateTime));
            }
    
            ObjectParameter storeIdParameter;
    
            if (storeId != null)
            {
                storeIdParameter = new ObjectParameter("storeId", storeId);
            }
            else
            {
                storeIdParameter = new ObjectParameter("storeId", typeof(string));
            }
    
            ObjectParameter showTypeParameter;
    
            if (showType != null)
            {
                showTypeParameter = new ObjectParameter("showType", showType);
            }
            else
            {
                showTypeParameter = new ObjectParameter("showType", typeof(string));
            }
            return base.ExecuteFunction<sp_getUserActivityDashBoard_Result>("sp_getUserActivityDashBoard", startdateParameter, enddateParameter, storeIdParameter, showTypeParameter);
        }
        public ObjectResult<sp_getRegisterConversion_Result> sp_getRegisterConversion(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string storeId, Nullable<bool> isEStore)
        {
    
            ObjectParameter startdateParameter;
    
            if (startdate.HasValue)
            {
                startdateParameter = new ObjectParameter("startdate", startdate);
            }
            else
            {
                startdateParameter = new ObjectParameter("startdate", typeof(System.DateTime));
            }
    
            ObjectParameter enddateParameter;
    
            if (enddate.HasValue)
            {
                enddateParameter = new ObjectParameter("enddate", enddate);
            }
            else
            {
                enddateParameter = new ObjectParameter("enddate", typeof(System.DateTime));
            }
    
            ObjectParameter storeIdParameter;
    
            if (storeId != null)
            {
                storeIdParameter = new ObjectParameter("StoreId", storeId);
            }
            else
            {
                storeIdParameter = new ObjectParameter("StoreId", typeof(string));
            }
    
            ObjectParameter isEStoreParameter;
    
            if (isEStore.HasValue)
            {
                isEStoreParameter = new ObjectParameter("isEStore", isEStore);
            }
            else
            {
                isEStoreParameter = new ObjectParameter("isEStore", typeof(bool));
            }
            return base.ExecuteFunction<sp_getRegisterConversion_Result>("sp_getRegisterConversion", startdateParameter, enddateParameter, storeIdParameter, isEStoreParameter);
        }
        public ObjectResult<sp_getConversionDetail_Result> sp_getConversionDetail(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string storeId, string storeValue, Nullable<int> month, Nullable<bool> isEStore)
        {
    
            ObjectParameter startdateParameter;
    
            if (startdate.HasValue)
            {
                startdateParameter = new ObjectParameter("startdate", startdate);
            }
            else
            {
                startdateParameter = new ObjectParameter("startdate", typeof(System.DateTime));
            }
    
            ObjectParameter enddateParameter;
    
            if (enddate.HasValue)
            {
                enddateParameter = new ObjectParameter("enddate", enddate);
            }
            else
            {
                enddateParameter = new ObjectParameter("enddate", typeof(System.DateTime));
            }
    
            ObjectParameter storeIdParameter;
    
            if (storeId != null)
            {
                storeIdParameter = new ObjectParameter("StoreId", storeId);
            }
            else
            {
                storeIdParameter = new ObjectParameter("StoreId", typeof(string));
            }
    
            ObjectParameter storeValueParameter;
    
            if (storeValue != null)
            {
                storeValueParameter = new ObjectParameter("StoreValue", storeValue);
            }
            else
            {
                storeValueParameter = new ObjectParameter("StoreValue", typeof(string));
            }
    
            ObjectParameter monthParameter;
    
            if (month.HasValue)
            {
                monthParameter = new ObjectParameter("Month", month);
            }
            else
            {
                monthParameter = new ObjectParameter("Month", typeof(int));
            }
    
            ObjectParameter isEStoreParameter;
    
            if (isEStore.HasValue)
            {
                isEStoreParameter = new ObjectParameter("isEStore", isEStore);
            }
            else
            {
                isEStoreParameter = new ObjectParameter("isEStore", typeof(bool));
            }
            return base.ExecuteFunction<sp_getConversionDetail_Result>("sp_getConversionDetail", startdateParameter, enddateParameter, storeIdParameter, storeValueParameter, monthParameter, isEStoreParameter);
        }
        public ObjectResult<Nullable<int>> spSyncProducts(string source, string target, Nullable<int> ctosOnly)
        {
    
            ObjectParameter sourceParameter;
    
            if (source != null)
            {
                sourceParameter = new ObjectParameter("Source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("Source", typeof(string));
            }
    
            ObjectParameter targetParameter;
    
            if (target != null)
            {
                targetParameter = new ObjectParameter("Target", target);
            }
            else
            {
                targetParameter = new ObjectParameter("Target", typeof(string));
            }
    
            ObjectParameter ctosOnlyParameter;
    
            if (ctosOnly.HasValue)
            {
                ctosOnlyParameter = new ObjectParameter("CtosOnly", ctosOnly);
            }
            else
            {
                ctosOnlyParameter = new ObjectParameter("CtosOnly", typeof(int));
            }
            return base.ExecuteFunction<Nullable<int>>("spSyncProducts", sourceParameter, targetParameter, ctosOnlyParameter);
        }
        public ObjectResult<sp_ConverProductToPart_Result> sp_ConverProductToPart(string storeId, string sproductID)
        {
    
            ObjectParameter storeIdParameter;
    
            if (storeId != null)
            {
                storeIdParameter = new ObjectParameter("StoreId", storeId);
            }
            else
            {
                storeIdParameter = new ObjectParameter("StoreId", typeof(string));
            }
    
            ObjectParameter sproductIDParameter;
    
            if (sproductID != null)
            {
                sproductIDParameter = new ObjectParameter("SproductID", sproductID);
            }
            else
            {
                sproductIDParameter = new ObjectParameter("SproductID", typeof(string));
            }
            return base.ExecuteFunction<sp_ConverProductToPart_Result>("sp_ConverProductToPart", storeIdParameter, sproductIDParameter);
        }
        public ObjectResult<eStoreSystemsByOptionModeCollection> geteStoreSystemsByOptionModel(string storeid, string moelNo)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter moelNoParameter;
    
            if (moelNo != null)
            {
                moelNoParameter = new ObjectParameter("MoelNo", moelNo);
            }
            else
            {
                moelNoParameter = new ObjectParameter("MoelNo", typeof(string));
            }
            return base.ExecuteFunction<eStoreSystemsByOptionModeCollection>("geteStoreSystemsByOptionModel", storeidParameter, moelNoParameter);
        }
        public ObjectResult<eStoreOrderableProductsByModelCollection> geteStoreOrderableProductsByModel(string storeid, string moelNo)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter moelNoParameter;
    
            if (moelNo != null)
            {
                moelNoParameter = new ObjectParameter("MoelNo", moelNo);
            }
            else
            {
                moelNoParameter = new ObjectParameter("MoelNo", typeof(string));
            }
            return base.ExecuteFunction<eStoreOrderableProductsByModelCollection>("geteStoreOrderableProductsByModel", storeidParameter, moelNoParameter);
        }
        public ObjectResult<string> getAllProductsInHierarchicalCategories(string storeID, string cATEGORYPaths)
        {
    
            ObjectParameter storeIDParameter;
    
            if (storeID != null)
            {
                storeIDParameter = new ObjectParameter("StoreID", storeID);
            }
            else
            {
                storeIDParameter = new ObjectParameter("StoreID", typeof(string));
            }
    
            ObjectParameter cATEGORYPathsParameter;
    
            if (cATEGORYPaths != null)
            {
                cATEGORYPathsParameter = new ObjectParameter("CATEGORYPaths", cATEGORYPaths);
            }
            else
            {
                cATEGORYPathsParameter = new ObjectParameter("CATEGORYPaths", typeof(string));
            }
            return base.ExecuteFunction<string>("getAllProductsInHierarchicalCategories", storeIDParameter, cATEGORYPathsParameter);
        }
        public ObjectResult<eStoreSystemsByOptionModeCollection> geteStoreSystemsByOptionParts(string storeid, string parts)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter partsParameter;
    
            if (parts != null)
            {
                partsParameter = new ObjectParameter("parts", parts);
            }
            else
            {
                partsParameter = new ObjectParameter("parts", typeof(string));
            }
            return base.ExecuteFunction<eStoreSystemsByOptionModeCollection>("geteStoreSystemsByOptionParts", storeidParameter, partsParameter);
        }
        public ObjectResult<sp_GetHotDeals_Result> sp_GetHotDeals(string storeid, Nullable<int> interval)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("Storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("Storeid", typeof(string));
            }
    
            ObjectParameter intervalParameter;
    
            if (interval.HasValue)
            {
                intervalParameter = new ObjectParameter("Interval", interval);
            }
            else
            {
                intervalParameter = new ObjectParameter("Interval", typeof(int));
            }
            return base.ExecuteFunction<sp_GetHotDeals_Result>("sp_GetHotDeals", storeidParameter, intervalParameter);
        }
        public ObjectResult<Spec_Category> getSpecCategoryTree(string bu, string storeid)
        {
    
            ObjectParameter buParameter;
    
            if (bu != null)
            {
                buParameter = new ObjectParameter("bu", bu);
            }
            else
            {
                buParameter = new ObjectParameter("bu", typeof(string));
            }
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
            return base.ExecuteFunction<Spec_Category>("getSpecCategoryTree", buParameter, storeidParameter);
        }
        public ObjectResult<sp_GetTreeByNode_Result> sp_GetTreeByNode(string tableName, string node, string keyName, Nullable<int> iD, Nullable<int> level)
        {
    
            ObjectParameter tableNameParameter;
    
            if (tableName != null)
            {
                tableNameParameter = new ObjectParameter("TableName", tableName);
            }
            else
            {
                tableNameParameter = new ObjectParameter("TableName", typeof(string));
            }
    
            ObjectParameter nodeParameter;
    
            if (node != null)
            {
                nodeParameter = new ObjectParameter("Node", node);
            }
            else
            {
                nodeParameter = new ObjectParameter("Node", typeof(string));
            }
    
            ObjectParameter keyNameParameter;
    
            if (keyName != null)
            {
                keyNameParameter = new ObjectParameter("KeyName", keyName);
            }
            else
            {
                keyNameParameter = new ObjectParameter("KeyName", typeof(string));
            }
    
            ObjectParameter iDParameter;
    
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(int));
            }
    
            ObjectParameter levelParameter;
    
            if (level.HasValue)
            {
                levelParameter = new ObjectParameter("Level", level);
            }
            else
            {
                levelParameter = new ObjectParameter("Level", typeof(int));
            }
            return base.ExecuteFunction<sp_GetTreeByNode_Result>("sp_GetTreeByNode", tableNameParameter, nodeParameter, keyNameParameter, iDParameter, levelParameter);
        }
        public ObjectResult<Spec_Category> getSpecCategoryTreeByID(Nullable<int> parentID)
        {
    
            ObjectParameter parentIDParameter;
    
            if (parentID.HasValue)
            {
                parentIDParameter = new ObjectParameter("ParentID", parentID);
            }
            else
            {
                parentIDParameter = new ObjectParameter("ParentID", typeof(int));
            }
            return base.ExecuteFunction<Spec_Category>("getSpecCategoryTreeByID", parentIDParameter);
        }
        public ObjectResult<sp_Add_Spec_Category_Result> sp_Add_Spec_Category(Nullable<int> parentcateid, string catename, string createdtype, Nullable<int> seq, string condition, string createdby, Nullable<System.DateTime> createtime, string lastupdateby, Nullable<System.DateTime> lastupdatetime, string displaytype)
        {
    
            ObjectParameter parentcateidParameter;
    
            if (parentcateid.HasValue)
            {
                parentcateidParameter = new ObjectParameter("parentcateid", parentcateid);
            }
            else
            {
                parentcateidParameter = new ObjectParameter("parentcateid", typeof(int));
            }
    
            ObjectParameter catenameParameter;
    
            if (catename != null)
            {
                catenameParameter = new ObjectParameter("catename", catename);
            }
            else
            {
                catenameParameter = new ObjectParameter("catename", typeof(string));
            }
    
            ObjectParameter createdtypeParameter;
    
            if (createdtype != null)
            {
                createdtypeParameter = new ObjectParameter("createdtype", createdtype);
            }
            else
            {
                createdtypeParameter = new ObjectParameter("createdtype", typeof(string));
            }
    
            ObjectParameter seqParameter;
    
            if (seq.HasValue)
            {
                seqParameter = new ObjectParameter("seq", seq);
            }
            else
            {
                seqParameter = new ObjectParameter("seq", typeof(int));
            }
    
            ObjectParameter conditionParameter;
    
            if (condition != null)
            {
                conditionParameter = new ObjectParameter("condition", condition);
            }
            else
            {
                conditionParameter = new ObjectParameter("condition", typeof(string));
            }
    
            ObjectParameter createdbyParameter;
    
            if (createdby != null)
            {
                createdbyParameter = new ObjectParameter("createdby", createdby);
            }
            else
            {
                createdbyParameter = new ObjectParameter("createdby", typeof(string));
            }
    
            ObjectParameter createtimeParameter;
    
            if (createtime.HasValue)
            {
                createtimeParameter = new ObjectParameter("createtime", createtime);
            }
            else
            {
                createtimeParameter = new ObjectParameter("createtime", typeof(System.DateTime));
            }
    
            ObjectParameter lastupdatebyParameter;
    
            if (lastupdateby != null)
            {
                lastupdatebyParameter = new ObjectParameter("lastupdateby", lastupdateby);
            }
            else
            {
                lastupdatebyParameter = new ObjectParameter("lastupdateby", typeof(string));
            }
    
            ObjectParameter lastupdatetimeParameter;
    
            if (lastupdatetime.HasValue)
            {
                lastupdatetimeParameter = new ObjectParameter("lastupdatetime", lastupdatetime);
            }
            else
            {
                lastupdatetimeParameter = new ObjectParameter("lastupdatetime", typeof(System.DateTime));
            }
    
            ObjectParameter displaytypeParameter;
    
            if (displaytype != null)
            {
                displaytypeParameter = new ObjectParameter("displaytype", displaytype);
            }
            else
            {
                displaytypeParameter = new ObjectParameter("displaytype", typeof(string));
            }
            return base.ExecuteFunction<sp_Add_Spec_Category_Result>("sp_Add_Spec_Category", parentcateidParameter, catenameParameter, createdtypeParameter, seqParameter, conditionParameter, createdbyParameter, createtimeParameter, lastupdatebyParameter, lastupdatetimeParameter, displaytypeParameter);
        }
        public ObjectResult<sp_Update_Spec_Category_Result> sp_Update_Spec_Category(Nullable<int> id, string category_displayname, string category_type, Nullable<int> seq, string condition, string lastupdateby, Nullable<System.DateTime> lastupdatetime, string displaytype, string nodetree)
        {
    
            ObjectParameter idParameter;
    
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(int));
            }
    
            ObjectParameter category_displaynameParameter;
    
            if (category_displayname != null)
            {
                category_displaynameParameter = new ObjectParameter("category_displayname", category_displayname);
            }
            else
            {
                category_displaynameParameter = new ObjectParameter("category_displayname", typeof(string));
            }
    
            ObjectParameter category_typeParameter;
    
            if (category_type != null)
            {
                category_typeParameter = new ObjectParameter("category_type", category_type);
            }
            else
            {
                category_typeParameter = new ObjectParameter("category_type", typeof(string));
            }
    
            ObjectParameter seqParameter;
    
            if (seq.HasValue)
            {
                seqParameter = new ObjectParameter("seq", seq);
            }
            else
            {
                seqParameter = new ObjectParameter("seq", typeof(int));
            }
    
            ObjectParameter conditionParameter;
    
            if (condition != null)
            {
                conditionParameter = new ObjectParameter("condition", condition);
            }
            else
            {
                conditionParameter = new ObjectParameter("condition", typeof(string));
            }
    
            ObjectParameter lastupdatebyParameter;
    
            if (lastupdateby != null)
            {
                lastupdatebyParameter = new ObjectParameter("lastupdateby", lastupdateby);
            }
            else
            {
                lastupdatebyParameter = new ObjectParameter("lastupdateby", typeof(string));
            }
    
            ObjectParameter lastupdatetimeParameter;
    
            if (lastupdatetime.HasValue)
            {
                lastupdatetimeParameter = new ObjectParameter("lastupdatetime", lastupdatetime);
            }
            else
            {
                lastupdatetimeParameter = new ObjectParameter("lastupdatetime", typeof(System.DateTime));
            }
    
            ObjectParameter displaytypeParameter;
    
            if (displaytype != null)
            {
                displaytypeParameter = new ObjectParameter("displaytype", displaytype);
            }
            else
            {
                displaytypeParameter = new ObjectParameter("displaytype", typeof(string));
            }
    
            ObjectParameter nodetreeParameter;
    
            if (nodetree != null)
            {
                nodetreeParameter = new ObjectParameter("nodetree", nodetree);
            }
            else
            {
                nodetreeParameter = new ObjectParameter("nodetree", typeof(string));
            }
            return base.ExecuteFunction<sp_Update_Spec_Category_Result>("sp_Update_Spec_Category", idParameter, category_displaynameParameter, category_typeParameter, seqParameter, conditionParameter, lastupdatebyParameter, lastupdatetimeParameter, displaytypeParameter, nodetreeParameter);
        }
        public ObjectResult<spProductSearch_Result> spProductSearch(string storeid, string keywards, Nullable<int> retrunCount)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter keywardsParameter;
    
            if (keywards != null)
            {
                keywardsParameter = new ObjectParameter("keywards", keywards);
            }
            else
            {
                keywardsParameter = new ObjectParameter("keywards", typeof(string));
            }
    
            ObjectParameter retrunCountParameter;
    
            if (retrunCount.HasValue)
            {
                retrunCountParameter = new ObjectParameter("RetrunCount", retrunCount);
            }
            else
            {
                retrunCountParameter = new ObjectParameter("RetrunCount", typeof(int));
            }
            return base.ExecuteFunction<spProductSearch_Result>("spProductSearch", storeidParameter, keywardsParameter, retrunCountParameter);
        }
        public ObjectResult<spProductSearch_Result> spProductSearchHint(string storeid, string keywards, Nullable<int> retrunCount)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter keywardsParameter;
    
            if (keywards != null)
            {
                keywardsParameter = new ObjectParameter("keywards", keywards);
            }
            else
            {
                keywardsParameter = new ObjectParameter("keywards", typeof(string));
            }
    
            ObjectParameter retrunCountParameter;
    
            if (retrunCount.HasValue)
            {
                retrunCountParameter = new ObjectParameter("RetrunCount", retrunCount);
            }
            else
            {
                retrunCountParameter = new ObjectParameter("RetrunCount", typeof(int));
            }
            return base.ExecuteFunction<spProductSearch_Result>("spProductSearchHint", storeidParameter, keywardsParameter, retrunCountParameter);
        }
        public ObjectResult<getHierarchyTree_Result> getHierarchyTree(Nullable<int> cid)
        {
    
            ObjectParameter cidParameter;
    
            if (cid.HasValue)
            {
                cidParameter = new ObjectParameter("cid", cid);
            }
            else
            {
                cidParameter = new ObjectParameter("cid", typeof(int));
            }
            return base.ExecuteFunction<getHierarchyTree_Result>("getHierarchyTree", cidParameter);
        }
        public ObjectResult<getOnlineRevenueBySector_Result> getOnlineRevenueBySector(string startDate, string endDate)
        {
    
            ObjectParameter startDateParameter;
    
            if (startDate != null)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(string));
            }
    
            ObjectParameter endDateParameter;
    
            if (endDate != null)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(string));
            }
            return base.ExecuteFunction<getOnlineRevenueBySector_Result>("getOnlineRevenueBySector", startDateParameter, endDateParameter);
        }
        public ObjectResult<spLink2eStoreRawResult> spLink2eStoreRaw(string store, string model, string partno)
        {
    
            ObjectParameter storeParameter;
    
            if (store != null)
            {
                storeParameter = new ObjectParameter("store", store);
            }
            else
            {
                storeParameter = new ObjectParameter("store", typeof(string));
            }
    
            ObjectParameter modelParameter;
    
            if (model != null)
            {
                modelParameter = new ObjectParameter("model", model);
            }
            else
            {
                modelParameter = new ObjectParameter("model", typeof(string));
            }
    
            ObjectParameter partnoParameter;
    
            if (partno != null)
            {
                partnoParameter = new ObjectParameter("partno", partno);
            }
            else
            {
                partnoParameter = new ObjectParameter("partno", typeof(string));
            }
            return base.ExecuteFunction<spLink2eStoreRawResult>("spLink2eStoreRaw", storeParameter, modelParameter, partnoParameter);
        }
        public ObjectResult<string> spLink2eStore(string store, string model, string partno)
        {
    
            ObjectParameter storeParameter;
    
            if (store != null)
            {
                storeParameter = new ObjectParameter("store", store);
            }
            else
            {
                storeParameter = new ObjectParameter("store", typeof(string));
            }
    
            ObjectParameter modelParameter;
    
            if (model != null)
            {
                modelParameter = new ObjectParameter("model", model);
            }
            else
            {
                modelParameter = new ObjectParameter("model", typeof(string));
            }
    
            ObjectParameter partnoParameter;
    
            if (partno != null)
            {
                partnoParameter = new ObjectParameter("partno", partno);
            }
            else
            {
                partnoParameter = new ObjectParameter("partno", typeof(string));
            }
            return base.ExecuteFunction<string>("spLink2eStore", storeParameter, modelParameter, partnoParameter);
        }
        public ObjectResult<spSearchCtosWithDefaultPartNo_Result> spSearchCtosWithDefaultPartNo(string sourcestoreID, string sourceSystem, string targetStoreid)
        {
    
            ObjectParameter sourcestoreIDParameter;
    
            if (sourcestoreID != null)
            {
                sourcestoreIDParameter = new ObjectParameter("sourcestoreID", sourcestoreID);
            }
            else
            {
                sourcestoreIDParameter = new ObjectParameter("sourcestoreID", typeof(string));
            }
    
            ObjectParameter sourceSystemParameter;
    
            if (sourceSystem != null)
            {
                sourceSystemParameter = new ObjectParameter("sourceSystem", sourceSystem);
            }
            else
            {
                sourceSystemParameter = new ObjectParameter("sourceSystem", typeof(string));
            }
    
            ObjectParameter targetStoreidParameter;
    
            if (targetStoreid != null)
            {
                targetStoreidParameter = new ObjectParameter("targetStoreid", targetStoreid);
            }
            else
            {
                targetStoreidParameter = new ObjectParameter("targetStoreid", typeof(string));
            }
            return base.ExecuteFunction<spSearchCtosWithDefaultPartNo_Result>("spSearchCtosWithDefaultPartNo", sourcestoreIDParameter, sourceSystemParameter, targetStoreidParameter);
        }
        public ObjectResult<spSearchDiffSiteCategory_Result> spSearchDiffSiteCategory(string fromStore, string toStore, string categoryPath)
        {
    
            ObjectParameter fromStoreParameter;
    
            if (fromStore != null)
            {
                fromStoreParameter = new ObjectParameter("FromStore", fromStore);
            }
            else
            {
                fromStoreParameter = new ObjectParameter("FromStore", typeof(string));
            }
    
            ObjectParameter toStoreParameter;
    
            if (toStore != null)
            {
                toStoreParameter = new ObjectParameter("ToStore", toStore);
            }
            else
            {
                toStoreParameter = new ObjectParameter("ToStore", typeof(string));
            }
    
            ObjectParameter categoryPathParameter;
    
            if (categoryPath != null)
            {
                categoryPathParameter = new ObjectParameter("CategoryPath", categoryPath);
            }
            else
            {
                categoryPathParameter = new ObjectParameter("CategoryPath", typeof(string));
            }
            return base.ExecuteFunction<spSearchDiffSiteCategory_Result>("spSearchDiffSiteCategory", fromStoreParameter, toStoreParameter, categoryPathParameter);
        }
        public ObjectResult<MarketingResourceResult> spGetMarketingResource(string rAWTXT, string nFKEY)
        {
    
            ObjectParameter rAWTXTParameter;
    
            if (rAWTXT != null)
            {
                rAWTXTParameter = new ObjectParameter("RAWTXT", rAWTXT);
            }
            else
            {
                rAWTXTParameter = new ObjectParameter("RAWTXT", typeof(string));
            }
    
            ObjectParameter nFKEYParameter;
    
            if (nFKEY != null)
            {
                nFKEYParameter = new ObjectParameter("NFKEY", nFKEY);
            }
            else
            {
                nFKEYParameter = new ObjectParameter("NFKEY", typeof(string));
            }
            return base.ExecuteFunction<MarketingResourceResult>("spGetMarketingResource", rAWTXTParameter, nFKEYParameter);
        }
        public ObjectResult<ProductSearchOptimizedResult> spProductSearchOptimized(string storeid, string keywards, Nullable<int> retrunCount)
        {
    
            ObjectParameter storeidParameter;
    
            if (storeid != null)
            {
                storeidParameter = new ObjectParameter("storeid", storeid);
            }
            else
            {
                storeidParameter = new ObjectParameter("storeid", typeof(string));
            }
    
            ObjectParameter keywardsParameter;
    
            if (keywards != null)
            {
                keywardsParameter = new ObjectParameter("keywards", keywards);
            }
            else
            {
                keywardsParameter = new ObjectParameter("keywards", typeof(string));
            }
    
            ObjectParameter retrunCountParameter;
    
            if (retrunCount.HasValue)
            {
                retrunCountParameter = new ObjectParameter("RetrunCount", retrunCount);
            }
            else
            {
                retrunCountParameter = new ObjectParameter("RetrunCount", typeof(int));
            }
            return base.ExecuteFunction<ProductSearchOptimizedResult>("spProductSearchOptimized", storeidParameter, keywardsParameter, retrunCountParameter);
        }
        public ObjectResult<FTSParserResult> spGetFTSParser(string keyword, Nullable<int> language)
        {
    
            ObjectParameter keywordParameter;
    
            if (keyword != null)
            {
                keywordParameter = new ObjectParameter("keyword", keyword);
            }
            else
            {
                keywordParameter = new ObjectParameter("keyword", typeof(string));
            }
    
            ObjectParameter languageParameter;
    
            if (language.HasValue)
            {
                languageParameter = new ObjectParameter("language", language);
            }
            else
            {
                languageParameter = new ObjectParameter("language", typeof(int));
            }
            return base.ExecuteFunction<FTSParserResult>("spGetFTSParser", keywordParameter, languageParameter);
        }

        #endregion

    }
}
