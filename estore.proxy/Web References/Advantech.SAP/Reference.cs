//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace eStore.Proxy.Advantech.SAP {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_eCommerceSoap", Namespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce")]
    public partial class WS_eCommerce : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSapProductStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetATPRFCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiATPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiATP_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiATP_DataSet2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceRFCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPODetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDmfCallOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_eCommerce() {
            this.Url = global::eStore.Proxy.Properties.Settings.Default.estore_proxy_Advantech_SAP_WS_eCommerce;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSapProductStatusCompletedEventHandler GetSapProductStatusCompleted;
        
        /// <remarks/>
        public event GetOrderStatusCompletedEventHandler GetOrderStatusCompleted;
        
        /// <remarks/>
        public event GetATPRFCCompletedEventHandler GetATPRFCCompleted;
        
        /// <remarks/>
        public event GetMultiATPCompletedEventHandler GetMultiATPCompleted;
        
        /// <remarks/>
        public event GetMultiATP_DataSetCompletedEventHandler GetMultiATP_DataSetCompleted;
        
        /// <remarks/>
        public event GetMultiATP_DataSet2CompletedEventHandler GetMultiATP_DataSet2Completed;
        
        /// <remarks/>
        public event GetMultiPriceCompletedEventHandler GetMultiPriceCompleted;
        
        /// <remarks/>
        public event GetPriceRFCCompletedEventHandler GetPriceRFCCompleted;
        
        /// <remarks/>
        public event GetInvLocCompletedEventHandler GetInvLocCompleted;
        
        /// <remarks/>
        public event GetPODetailCompletedEventHandler GetPODetailCompleted;
        
        /// <remarks/>
        public event GetDmfCallCompletedEventHandler GetDmfCallCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetSapProductStatus", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetSapProductStatus(string part_no, string plant, string sales_org, ref string status) {
            object[] results = this.Invoke("GetSapProductStatus", new object[] {
                        part_no,
                        plant,
                        sales_org,
                        status});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetSapProductStatusAsync(string part_no, string plant, string sales_org, string status) {
            this.GetSapProductStatusAsync(part_no, plant, sales_org, status, null);
        }
        
        /// <remarks/>
        public void GetSapProductStatusAsync(string part_no, string plant, string sales_org, string status, object userState) {
            if ((this.GetSapProductStatusOperationCompleted == null)) {
                this.GetSapProductStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSapProductStatusOperationCompleted);
            }
            this.InvokeAsync("GetSapProductStatus", new object[] {
                        part_no,
                        plant,
                        sales_org,
                        status}, this.GetSapProductStatusOperationCompleted, userState);
        }
        
        private void OnGetSapProductStatusOperationCompleted(object arg) {
            if ((this.GetSapProductStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSapProductStatusCompleted(this, new GetSapProductStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetOrderStatus", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrderStatus(string Sndprn, string Sndsad, out string strResult, out string strRemark) {
            object[] results = this.Invoke("GetOrderStatus", new object[] {
                        Sndprn,
                        Sndsad});
            strResult = ((string)(results[1]));
            strRemark = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderStatusAsync(string Sndprn, string Sndsad) {
            this.GetOrderStatusAsync(Sndprn, Sndsad, null);
        }
        
        /// <remarks/>
        public void GetOrderStatusAsync(string Sndprn, string Sndsad, object userState) {
            if ((this.GetOrderStatusOperationCompleted == null)) {
                this.GetOrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrderStatus", new object[] {
                        Sndprn,
                        Sndsad}, this.GetOrderStatusOperationCompleted, userState);
        }
        
        private void OnGetOrderStatusOperationCompleted(object arg) {
            if ((this.GetOrderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderStatusCompleted(this, new GetOrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetATPRFC", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetATPRFC(string WERK, string MATNR, decimal REQ_QTY, string REQ_Date, string UNI, out string strResult, out string strRemark) {
            object[] results = this.Invoke("GetATPRFC", new object[] {
                        WERK,
                        MATNR,
                        REQ_QTY,
                        REQ_Date,
                        UNI});
            strResult = ((string)(results[1]));
            strRemark = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetATPRFCAsync(string WERK, string MATNR, decimal REQ_QTY, string REQ_Date, string UNI) {
            this.GetATPRFCAsync(WERK, MATNR, REQ_QTY, REQ_Date, UNI, null);
        }
        
        /// <remarks/>
        public void GetATPRFCAsync(string WERK, string MATNR, decimal REQ_QTY, string REQ_Date, string UNI, object userState) {
            if ((this.GetATPRFCOperationCompleted == null)) {
                this.GetATPRFCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetATPRFCOperationCompleted);
            }
            this.InvokeAsync("GetATPRFC", new object[] {
                        WERK,
                        MATNR,
                        REQ_QTY,
                        REQ_Date,
                        UNI}, this.GetATPRFCOperationCompleted, userState);
        }
        
        private void OnGetATPRFCOperationCompleted(object arg) {
            if ((this.GetATPRFCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetATPRFCCompleted(this, new GetATPRFCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetMultiATP", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMultiATP(string strXML, out string strResult, out string strRemark) {
            object[] results = this.Invoke("GetMultiATP", new object[] {
                        strXML});
            strResult = ((string)(results[1]));
            strRemark = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiATPAsync(string strXML) {
            this.GetMultiATPAsync(strXML, null);
        }
        
        /// <remarks/>
        public void GetMultiATPAsync(string strXML, object userState) {
            if ((this.GetMultiATPOperationCompleted == null)) {
                this.GetMultiATPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiATPOperationCompleted);
            }
            this.InvokeAsync("GetMultiATP", new object[] {
                        strXML}, this.GetMultiATPOperationCompleted, userState);
        }
        
        private void OnGetMultiATPOperationCompleted(object arg) {
            if ((this.GetMultiATPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiATPCompleted(this, new GetMultiATPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetMultiATP_DataSet", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMultiATP_DataSet(System.Data.DataSet ds, out System.Data.DataSet dsResult, out string strRemark) {
            object[] results = this.Invoke("GetMultiATP_DataSet", new object[] {
                        ds});
            dsResult = ((System.Data.DataSet)(results[1]));
            strRemark = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiATP_DataSetAsync(System.Data.DataSet ds) {
            this.GetMultiATP_DataSetAsync(ds, null);
        }
        
        /// <remarks/>
        public void GetMultiATP_DataSetAsync(System.Data.DataSet ds, object userState) {
            if ((this.GetMultiATP_DataSetOperationCompleted == null)) {
                this.GetMultiATP_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiATP_DataSetOperationCompleted);
            }
            this.InvokeAsync("GetMultiATP_DataSet", new object[] {
                        ds}, this.GetMultiATP_DataSetOperationCompleted, userState);
        }
        
        private void OnGetMultiATP_DataSetOperationCompleted(object arg) {
            if ((this.GetMultiATP_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiATP_DataSetCompleted(this, new GetMultiATP_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetMultiATP_DataSet2", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMultiATP_DataSet2(System.Data.DataSet ds, out string strResult, out string strRemark) {
            object[] results = this.Invoke("GetMultiATP_DataSet2", new object[] {
                        ds});
            strResult = ((string)(results[1]));
            strRemark = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiATP_DataSet2Async(System.Data.DataSet ds) {
            this.GetMultiATP_DataSet2Async(ds, null);
        }
        
        /// <remarks/>
        public void GetMultiATP_DataSet2Async(System.Data.DataSet ds, object userState) {
            if ((this.GetMultiATP_DataSet2OperationCompleted == null)) {
                this.GetMultiATP_DataSet2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiATP_DataSet2OperationCompleted);
            }
            this.InvokeAsync("GetMultiATP_DataSet2", new object[] {
                        ds}, this.GetMultiATP_DataSet2OperationCompleted, userState);
        }
        
        private void OnGetMultiATP_DataSet2OperationCompleted(object arg) {
            if ((this.GetMultiATP_DataSet2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiATP_DataSet2Completed(this, new GetMultiATP_DataSet2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetMultiPrice", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMultiPrice(string Mandt, string Vkorg, string Kunnr, string xml, out string result) {
            object[] results = this.Invoke("GetMultiPrice", new object[] {
                        Mandt,
                        Vkorg,
                        Kunnr,
                        xml});
            result = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiPriceAsync(string Mandt, string Vkorg, string Kunnr, string xml) {
            this.GetMultiPriceAsync(Mandt, Vkorg, Kunnr, xml, null);
        }
        
        /// <remarks/>
        public void GetMultiPriceAsync(string Mandt, string Vkorg, string Kunnr, string xml, object userState) {
            if ((this.GetMultiPriceOperationCompleted == null)) {
                this.GetMultiPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiPriceOperationCompleted);
            }
            this.InvokeAsync("GetMultiPrice", new object[] {
                        Mandt,
                        Vkorg,
                        Kunnr,
                        xml}, this.GetMultiPriceOperationCompleted, userState);
        }
        
        private void OnGetMultiPriceOperationCompleted(object arg) {
            if ((this.GetMultiPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiPriceCompleted(this, new GetMultiPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetPriceRFC", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPriceRFC(string Mandt, string Vkorg, string Kunnr, string Matnr, int Mglme, out decimal p_fltList_Price, out decimal p_fltUnit_Price) {
            object[] results = this.Invoke("GetPriceRFC", new object[] {
                        Mandt,
                        Vkorg,
                        Kunnr,
                        Matnr,
                        Mglme});
            p_fltList_Price = ((decimal)(results[1]));
            p_fltUnit_Price = ((decimal)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceRFCAsync(string Mandt, string Vkorg, string Kunnr, string Matnr, int Mglme) {
            this.GetPriceRFCAsync(Mandt, Vkorg, Kunnr, Matnr, Mglme, null);
        }
        
        /// <remarks/>
        public void GetPriceRFCAsync(string Mandt, string Vkorg, string Kunnr, string Matnr, int Mglme, object userState) {
            if ((this.GetPriceRFCOperationCompleted == null)) {
                this.GetPriceRFCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceRFCOperationCompleted);
            }
            this.InvokeAsync("GetPriceRFC", new object[] {
                        Mandt,
                        Vkorg,
                        Kunnr,
                        Matnr,
                        Mglme}, this.GetPriceRFCOperationCompleted, userState);
        }
        
        private void OnGetPriceRFCOperationCompleted(object arg) {
            if ((this.GetPriceRFCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceRFCCompleted(this, new GetPriceRFCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetInvLoc", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInvLoc(string pLoc, string pPart_No, bool pShow, string pPlant, out string p_LGORT_SN, out string p_STOCK) {
            object[] results = this.Invoke("GetInvLoc", new object[] {
                        pLoc,
                        pPart_No,
                        pShow,
                        pPlant});
            p_LGORT_SN = ((string)(results[1]));
            p_STOCK = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvLocAsync(string pLoc, string pPart_No, bool pShow, string pPlant) {
            this.GetInvLocAsync(pLoc, pPart_No, pShow, pPlant, null);
        }
        
        /// <remarks/>
        public void GetInvLocAsync(string pLoc, string pPart_No, bool pShow, string pPlant, object userState) {
            if ((this.GetInvLocOperationCompleted == null)) {
                this.GetInvLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvLocOperationCompleted);
            }
            this.InvokeAsync("GetInvLoc", new object[] {
                        pLoc,
                        pPart_No,
                        pShow,
                        pPlant}, this.GetInvLocOperationCompleted, userState);
        }
        
        private void OnGetInvLocOperationCompleted(object arg) {
            if ((this.GetInvLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvLocCompleted(this, new GetInvLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetPODetail", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPODetail(string pStrPONbr, out System.Data.DataSet dsResult) {
            object[] results = this.Invoke("GetPODetail", new object[] {
                        pStrPONbr});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPODetailAsync(string pStrPONbr) {
            this.GetPODetailAsync(pStrPONbr, null);
        }
        
        /// <remarks/>
        public void GetPODetailAsync(string pStrPONbr, object userState) {
            if ((this.GetPODetailOperationCompleted == null)) {
                this.GetPODetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPODetailOperationCompleted);
            }
            this.InvokeAsync("GetPODetail", new object[] {
                        pStrPONbr}, this.GetPODetailOperationCompleted, userState);
        }
        
        private void OnGetPODetailOperationCompleted(object arg) {
            if ((this.GetPODetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPODetailCompleted(this, new GetPODetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvantechWS_VB/WS_eCommerce/GetDmfCall", RequestNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", ResponseNamespace="http://tempuri.org/AdvantechWS_VB/WS_eCommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDmfCall(string CallCenter, ref int Inbound, ref int Outbound, ref int CallWaiting) {
            object[] results = this.Invoke("GetDmfCall", new object[] {
                        CallCenter,
                        Inbound,
                        Outbound,
                        CallWaiting});
            Inbound = ((int)(results[1]));
            Outbound = ((int)(results[2]));
            CallWaiting = ((int)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDmfCallAsync(string CallCenter, int Inbound, int Outbound, int CallWaiting) {
            this.GetDmfCallAsync(CallCenter, Inbound, Outbound, CallWaiting, null);
        }
        
        /// <remarks/>
        public void GetDmfCallAsync(string CallCenter, int Inbound, int Outbound, int CallWaiting, object userState) {
            if ((this.GetDmfCallOperationCompleted == null)) {
                this.GetDmfCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDmfCallOperationCompleted);
            }
            this.InvokeAsync("GetDmfCall", new object[] {
                        CallCenter,
                        Inbound,
                        Outbound,
                        CallWaiting}, this.GetDmfCallOperationCompleted, userState);
        }
        
        private void OnGetDmfCallOperationCompleted(object arg) {
            if ((this.GetDmfCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDmfCallCompleted(this, new GetDmfCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSapProductStatusCompletedEventHandler(object sender, GetSapProductStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSapProductStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSapProductStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrderStatusCompletedEventHandler(object sender, GetOrderStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strRemark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetATPRFCCompletedEventHandler(object sender, GetATPRFCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetATPRFCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetATPRFCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strRemark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMultiATPCompletedEventHandler(object sender, GetMultiATPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiATPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiATPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strRemark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMultiATP_DataSetCompletedEventHandler(object sender, GetMultiATP_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiATP_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiATP_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strRemark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMultiATP_DataSet2CompletedEventHandler(object sender, GetMultiATP_DataSet2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiATP_DataSet2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiATP_DataSet2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strRemark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMultiPriceCompletedEventHandler(object sender, GetMultiPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPriceRFCCompletedEventHandler(object sender, GetPriceRFCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceRFCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceRFCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal p_fltList_Price {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal p_fltUnit_Price {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInvLocCompletedEventHandler(object sender, GetInvLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string p_LGORT_SN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string p_STOCK {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPODetailCompletedEventHandler(object sender, GetPODetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPODetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPODetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDmfCallCompletedEventHandler(object sender, GetDmfCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDmfCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDmfCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Inbound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int Outbound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int CallWaiting {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591